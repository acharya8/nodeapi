define({
  "api": [
    {
      "type": "post",
      "url": "/api/admin/addressType/activeInactiveAddressType",
      "title": "Change Address Type",
      "version": "1.0.0",
      "name": "Change_Address_Type_Status",
      "description": "<p>Change Address Type Status</p>",
      "group": "Address_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Address Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Address Type Status',\n     recordList: Address Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/addressTypeRoutes.ts",
      "groupTitle": "Address_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/addressType/getAddressTypes",
      "title": "Get Address Types",
      "name": "Get_Address_Type",
      "description": "<p>Get Address Type</p>",
      "group": "Address_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Address Type',\n     recordList: Address Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "version": "0.0.0",
      "filename": "source/routes/admin/addressTypeRoutes.ts",
      "groupTitle": "Address_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/addressType/updateAddressType",
      "title": "update Address Type",
      "version": "1.0.0",
      "name": "Update_Address_Type",
      "description": "<p>Update Address Type</p>",
      "group": "Address_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Address Type</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "description",
              "description": "<p>Optional description of Address Type</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Address Type Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Address Type',\n     recordList: Address Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>,  if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/addressTypeRoutes.ts",
      "groupTitle": "Address_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/addressType/insertAddressType",
      "title": "insert Address Type",
      "version": "1.0.0",
      "name": "insert_Address_Type",
      "description": "<p>insert Address Type</p>",
      "group": "Address_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Address Type</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "description",
              "description": "<p>Optional description of Address Type</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Address Type',\n     recordList: Address Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/addressTypeRoutes.ts",
      "groupTitle": "Address_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/badges/activeInActiveBadges",
      "title": "Change Badges",
      "version": "1.0.0",
      "name": "Change_Badges_Status",
      "description": "<p>Change Badges Status</p>",
      "group": "Badges_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Badges Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Badges Status',\n     recordList: Badges,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/badgeRoutes.ts",
      "groupTitle": "Badges_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/badges/getBadges",
      "title": "Get Badges",
      "version": "1.0.0",
      "name": "Get_Badges",
      "description": "<p>Get Badges</p>",
      "group": "Badges_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Badges',\n     recordList: Badges,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/badgeRoutes.ts",
      "groupTitle": "Badges_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/badges/updateBadges",
      "title": "update Badges",
      "version": "1.0.0",
      "name": "Update_Badges",
      "description": "<p>Update Badges</p>",
      "group": "Badges_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Badges</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Badges Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Badges',\n     recordList: Badges,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/badgeRoutes.ts",
      "groupTitle": "Badges_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/badges/updatePartnerBadge",
      "title": "Update Partner Badge",
      "version": "1.0.0",
      "name": "Update_Partner_Badge",
      "description": "<p>Update Partner Badge</p>",
      "group": "Badges_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "badgeId",
              "description": "<p>Requires Badges Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Partner Badge',\n     recordList: Badges,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/badgeRoutes.ts",
      "groupTitle": "Badges_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/badges/insertBadges",
      "title": "insert Badges",
      "version": "1.0.0",
      "name": "insert_Badges",
      "description": "<p>insert Badges</p>",
      "group": "Badges_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Badges</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Badges',\n     recordList: Badges,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/badgeRoutes.ts",
      "groupTitle": "Badges_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankLoans/activeInactiveBankLoan",
      "title": "Change BankLoan status",
      "version": "1.0.0",
      "name": "Change_BankLoan_Status",
      "description": "<p>Change BankLoan Status</p>",
      "group": "BankLoan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Bank Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change BankLoan Status',\n     recordList: BankLoan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankLoanRoutes.ts",
      "groupTitle": "BankLoan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankLoans/getBankLoans",
      "title": "Get BankLoan",
      "name": "Get_BankLoan",
      "description": "<p>Get BankLoan</p>",
      "group": "BankLoan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "bankIds",
              "description": "<p>Optional bankIds.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "servieIds",
              "description": "<p>Optional ServiceIds.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get BankLoan',\n     recordList: BankLoan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "version": "0.0.0",
      "filename": "source/routes/admin/bankLoanRoutes.ts",
      "groupTitle": "BankLoan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankLoans/updateBankLoan",
      "title": "update BankLoan",
      "version": "1.0.0",
      "name": "Update_BankLoan",
      "description": "<p>Update BankLoan</p>",
      "group": "BankLoan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "loanName",
              "description": "<p>Optional name of Bank Loan</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankId",
              "description": "<p>Required id of Bank</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviecId",
              "description": "<p>Option id of Service</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Bank Loan Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update BankLoan',\n     recordList: BankLoan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankLoanRoutes.ts",
      "groupTitle": "BankLoan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankLoans/insertBankLoan",
      "title": "insert BankLoan",
      "version": "1.0.0",
      "name": "insert_BankLoan",
      "description": "<p>insert BankLoan</p>",
      "group": "BankLoan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "loanName",
              "description": "<p>Optional name of Bank Loan</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankId",
              "description": "<p>Required id of Bank</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviecId",
              "description": "<p>Option id of Service</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert BankLoan',\n     recordList: BankLoan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankLoanRoutes.ts",
      "groupTitle": "BankLoan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/banks/activeInactiveBank",
      "title": "Change Bank",
      "version": "1.0.0",
      "name": "Change_Bank_Status",
      "description": "<p>Change Bank Status</p>",
      "group": "Bank_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Bank Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Bank Status',\n     recordList: Bank,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankRoutes.ts",
      "groupTitle": "Bank_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/banks/getBanks",
      "title": "Get Bank",
      "name": "Get_Bank",
      "description": "<p>Get Bank</p>",
      "group": "Bank_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Bank',\n     recordList: Bank,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "version": "0.0.0",
      "filename": "source/routes/admin/bankRoutes.ts",
      "groupTitle": "Bank_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/banks/updateBank",
      "title": "update Bank",
      "version": "1.0.0",
      "name": "Update_Bank",
      "description": "<p>Update Bank</p>",
      "group": "Bank_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Bank</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "description",
              "description": "<p>Optional description of Bank</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "headquearter",
              "description": "<p>Option headquearter of Bank</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "bankCode",
              "description": "<p>Option bankCode of Bank</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Bank Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Bank',\n     recordList: Bank,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankRoutes.ts",
      "groupTitle": "Bank_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/banks/insertBank",
      "title": "insert Bank",
      "version": "1.0.0",
      "name": "insert_Bank",
      "description": "<p>insert Bank</p>",
      "group": "Bank_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Bank</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "description",
              "description": "<p>Optional description of Bank</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "headquearter",
              "description": "<p>Option headquearter of Bank</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "bankCode",
              "description": "<p>Option bankCode of Bank</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Bank',\n     recordList: Bank,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankRoutes.ts",
      "groupTitle": "Bank_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/partner/banks/getBanks",
      "title": "Get Banks",
      "version": "1.0.0",
      "name": "Get_Banks",
      "description": "<p>Get Banks</p>",
      "group": "Bank_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Banks',\n     recordList: Banks,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/bankRoutes.ts",
      "groupTitle": "Bank_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/web/banks/getBanks",
      "title": "Get Banks",
      "version": "1.0.0",
      "name": "Get_Banks",
      "description": "<p>Get Banks</p>",
      "group": "Bank_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Banks',\n     recordList: Bank,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/bankRoutes.ts",
      "groupTitle": "Bank_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/admin/bankCreditCard/getBankCreditCard",
      "title": "Get Bank CreditCard",
      "version": "1.0.0",
      "name": "Get_Bank_CreditCard",
      "description": "<p>Get Bank CreditCard</p>",
      "group": "Bank_CreditCard_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "bankId",
              "description": "<p>Optional bankId</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional startIndex</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional FetchRecords</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Bank CreditCard',\n     recordList: Bank CreditCard,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankCreditCardRoutes.ts",
      "groupTitle": "Bank_CreditCard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankCreditCard/insertUpdateBankCreditCard",
      "title": "Insert Update Bank CreditCard",
      "version": "1.0.0",
      "name": "Insert_Update_Bank_CreditCard",
      "description": "<p>Insert Update Bank CreditCard</p>",
      "group": "Bank_CreditCard_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Number",
              "optional": false,
              "field": "bankId",
              "description": "<p>Requires bankId</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "creditCardName",
              "description": "<p>Requires Credit Card Name</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "benifitDescription",
              "description": "<p>Requires Benifit Description</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "keyFeatures",
              "description": "<p>Requires Key Features</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "id",
              "description": "<p>Optional Bank Credit Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Update Bank CreditCard',\n     recordList: Bank CreditCard,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankCreditCardRoutes.ts",
      "groupTitle": "Bank_CreditCard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankCreditCardPolicy/getBankCreditCardPolicy",
      "title": "Get Bank CreditCard Policy",
      "version": "1.0.0",
      "name": "Get_Bank_CreditCard_Policy",
      "description": "<p>Get Bank CreditCard Policy</p>",
      "group": "Bank_CreditCard_Policy_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional startIndex</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional FetchRecords</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Bank CreditCard Policy',\n     recordList: Bank CreditCard Policy,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankCreditCardPolicyRoutes.ts",
      "groupTitle": "Bank_CreditCard_Policy_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankCreditCardPolicy/getBankCreditCardPolicy",
      "title": "Get Bank CreditCard Policy",
      "version": "1.0.0",
      "name": "Get_Bank_CreditCard_Policy",
      "description": "<p>Get Bank CreditCard Policy</p>",
      "group": "Bank_CreditCard_Policy_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional startIndex</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional FetchRecords</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Bank CreditCard Policy',\n     recordList: Bank CreditCard Policy,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankCreditCardPolicyRoutes.ts",
      "groupTitle": "Bank_CreditCard_Policy_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankCreditCardPolicy/insertUpdateBankCreditCardPolicy",
      "title": "Insert Update Bank CreditCard Policy",
      "version": "1.0.0",
      "name": "Insert_Update_Bank_CreditCard_Policy",
      "description": "<p>Insert Update Bank CreditCard Policy</p>",
      "group": "Bank_CreditCard_Policy_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Number",
              "optional": false,
              "field": "bankCreditCardId",
              "description": "<p>Requires Bank Credit Card Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires Employment Type Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": false,
              "field": "minimumCibilScore",
              "description": "<p>Requires Minimum Cibil Score</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": false,
              "field": "minAge",
              "description": "<p>Requires Min Age</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": false,
              "field": "maxAge",
              "description": "<p>Requires Max Age</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": false,
              "field": "minIncome",
              "description": "<p>Requires Min Income</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": false,
              "field": "companyCategoryTypeId",
              "description": "<p>Requires Company Category Type Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "id",
              "description": "<p>Optional Bank Credit Card Policy Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Update Bank CreditCard',\n     recordList: Bank CreditCard,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankCreditCardPolicyRoutes.ts",
      "groupTitle": "Bank_CreditCard_Policy_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankLoanCommission/getBankLoanCommission",
      "title": "Get Bank Loan Commission",
      "version": "1.0.0",
      "name": "Get_Bank_Loan_Commission",
      "description": "<p>Get Bank Loan Commission</p>",
      "group": "Bank_Loan_Commission_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "bankIds",
              "description": "<p>Optional Bank Ids.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "serviceId",
              "description": "<p>Optional Service Ids.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "commissionTypeId",
              "description": "<p>Optional Commission Type Ids.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Bank Loan Commission',\n     recordList: Bank Loan Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankLoanCommissionRoutes.ts",
      "groupTitle": "Bank_Loan_Commission_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankLoanCommission/insertUpdateBankLoanCommission",
      "title": "Insert/Update Bank Loan Commission",
      "version": "1.0.0",
      "name": "Insert/Update_Bank_Loan_Commission",
      "description": "<p>Insert/Update Bank Loan Commission</p>",
      "group": "Bank_Loan_Commission_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankId",
              "description": "<p>Required Bank Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Required Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "commissionTypeId",
              "description": "<p>Required Commission Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "commission",
              "description": "<p>Required Commission.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "id",
              "description": "<p>Required Bank Loan Commission Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Bank Loan Commission',\n     recordList: Bank Loan Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankLoanCommissionRoutes.ts",
      "groupTitle": "Bank_Loan_Commission_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/partnerCommission/getBankLoanPartnerCommission",
      "title": "Get Bank Loan Partner Commission",
      "version": "1.0.0",
      "name": "Get_Bank_Loan_Partner_Commission",
      "description": "<p>Get Bank Loan Partner Commission</p>",
      "group": "Bank_Loan_Partner_Commission_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Bank Loan Partner Commission',\n     recordList: Bank Loan Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankLoanPartnerCommissionRoutes.ts",
      "groupTitle": "Bank_Loan_Partner_Commission_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/partnerCommission/insertUpdatePartnerCommission",
      "title": "Insert/Update Bank Loan Partner Commission",
      "version": "1.0.0",
      "name": "Insert/Update_Bank_Loan_Partner_Commission",
      "description": "<p>Insert/Update Bank Loan Partner Commission</p>",
      "group": "Bank_Loan_Partner_Commission_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankId",
              "description": "<p>Required Bank Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Required Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "commissionTypeId",
              "description": "<p>Required Commission Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "commission",
              "description": "<p>Required Commission.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": false,
              "field": "partnerIds",
              "description": "<p>Required partnerIds.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "commissionTemplateId",
              "description": "<p>Optional Commission Template Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Bank Loan Partner Commission',\n     recordList: Bank Loan Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankLoanPartnerCommissionRoutes.ts",
      "groupTitle": "Bank_Loan_Partner_Commission_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankPolicies/getBankPolicy",
      "title": "Get Bank Loan Policy",
      "version": "1.0.0",
      "name": "Get_Bank_Loan_Policy",
      "description": "<p>Get Bank Loan Policy</p>",
      "group": "Bank_Policy_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "bankId",
              "description": "<p>Optional Bank Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "serviceId",
              "description": "<p>Optional Service Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "age",
              "description": "<p>Optional Min Age</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "employmentTypeId",
              "description": "<p>Optional Employment Type Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "cibilScore",
              "description": "<p>Optional Cibil Score</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "income",
              "description": "<p>Optional Income</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "workExpInCurrentCompany",
              "description": "<p>Optional Work Experience in Current Company In Month</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "vintage",
              "description": "<p>Optional Vintage</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "turnOver",
              "description": "<p>Optional TurnOver</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert/Update Bank Loan Policy',\n     recordList: Bank Policy,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankPolicyRoutes.ts",
      "groupTitle": "Bank_Policy_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/bankPolicies/insertUpdateBankPolicy",
      "title": "insert/Update Bank Loan Policy",
      "version": "1.0.0",
      "name": "insert/Update_Bank_Loan_Policy",
      "description": "<p>insert/Update Bank Loan Policy</p>",
      "group": "Bank_Policy_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankId",
              "description": "<p>Requires Bank Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "banklLoanId",
              "description": "<p>Requires Bank Loan Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "minAge",
              "description": "<p>Requires Min Age</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "maxAge",
              "description": "<p>Requires Max Age</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "bankLoanPolicyId",
              "description": "<p>Optional Bank Loan Policy Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "employmentTypeId",
              "description": "<p>Optional Employment Type Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "minimumCibilScore",
              "description": "<p>Optional Minimum Cibil Score</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "minIncome",
              "description": "<p>Optional Minimum Income</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "workExpInCurrentCompany",
              "description": "<p>Optional Work Experince In Corrent Compny In Month</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "vintage",
              "description": "<p>Optional Vintage</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "minTurnOver",
              "description": "<p>Optional Minimum Turn Over</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "maxTurnOver",
              "description": "<p>Optional Maximum Turn Over</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "tenure",
              "description": "<p>Optional Tenure</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "minROI",
              "description": "<p>Optional Minimum Rate Of interest</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "maxROI",
              "description": "<p>Optional Maximum Rate Of Interest</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "loanAmount",
              "description": "<p>Optional Loan Amount</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "loanValue",
              "description": "<p>Optional Loan Value In Percentage</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert/Update Bank Loan Policy',\n     recordList: Bank Policy,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bankPolicyRoutes.ts",
      "groupTitle": "Bank_Policy_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/banner/activeInactiveBanner",
      "title": "Change Banner Status",
      "version": "1.0.0",
      "name": "Change_Banner_Status",
      "description": "<p>Change Banner Status</p>",
      "group": "Banner_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Banner Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Bank Status',\n     recordList: Bank,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bannerRoutes.ts",
      "groupTitle": "Banner_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/banner/insertBanner",
      "title": "insert Banner",
      "version": "1.0.0",
      "name": "insert_Banner",
      "description": "<p>insert Banner</p>",
      "group": "Banner_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "url",
              "description": "<p>Requires url of Banner</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires roleId for Banner</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fromDate",
              "description": "<p>Optional fromDate for Banner</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "toDate",
              "description": "<p>Optional toDate of Banner</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Banner',\n     recordList: Banner,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/bannerRoutes.ts",
      "groupTitle": "Banner_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/banners/getBanner",
      "title": "Get Banners",
      "version": "1.0.0",
      "name": "Get_Banners",
      "description": "<p>Get Banners</p>",
      "group": "Banner_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "number",
              "optional": false,
              "field": "roleId",
              "description": "<p>required roleId</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Banner',\n     recordList: Banner,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/bannerRoutes.ts",
      "groupTitle": "Banner_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/banner/getBanners",
      "title": "Get Bank",
      "name": "Get_Bank",
      "description": "<p>Get Banners</p>",
      "group": "Banners_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Banners',\n     recordList: Banners,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "version": "0.0.0",
      "filename": "source/routes/admin/bannerRoutes.ts",
      "groupTitle": "Banners_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessAnnualProfit/activeInactiveBusinessAnnualProfit",
      "title": "Change BusinessAnnual Profit",
      "version": "1.0.0",
      "name": "Change_BusinessAnnual_Profit_Status",
      "description": "<p>Change BusinessAnnual Profit Status</p>",
      "group": "BusinessAnnual_Profit_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires BusinessAnnual Profit Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change BusinessAnnual Profit Status',\n     recordList: BusinessAnnual Profit,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessAnnualProfitRoutes.ts",
      "groupTitle": "BusinessAnnual_Profit_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessAnnualProfit/getBusinessAnnualProfits",
      "title": "Get BusinessAnnual Profit",
      "version": "1.0.0",
      "name": "Get_BusinessAnnual_Profit",
      "description": "<p>Get BusinessAnnual Profit</p>",
      "group": "BusinessAnnual_Profit_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get BusinessAnnual Profit',\n     recordList: BusinessAnnual Profit,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessAnnualProfitRoutes.ts",
      "groupTitle": "BusinessAnnual_Profit_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessAnnualProfit/updateBusinessAnnualProfit",
      "title": "update BusinessAnnual Profit",
      "version": "1.0.0",
      "name": "UpdateBusinessAnnual_Profit",
      "description": "<p>Update BusinessAnnual Profit</p>",
      "group": "BusinessAnnual_Profit_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of BusinessAnnual Profit.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires BusinessAnnual Profit Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update BusinessAnnual Profit',\n     recordList: BusinessAnnual Profit,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessAnnualProfitRoutes.ts",
      "groupTitle": "BusinessAnnual_Profit_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessAnnualProfit/insertBusinessAnnualProfit",
      "title": "insert BusinessAnnual Profit",
      "version": "1.0.0",
      "name": "insert_BusinessAnnual_Profit",
      "description": "<p>insert BusinessAnnual Profit</p>",
      "group": "BusinessAnnual_Profit_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of BusinessAnnual Profit</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert BusinessAnnual Profit',\n     recordList: BusinessAnnual Profit,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessAnnualProfitRoutes.ts",
      "groupTitle": "BusinessAnnual_Profit_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessAnnualSale/activeInactiveBusinessAnnualSale",
      "title": "Change BusinessAnnual Sale",
      "version": "1.0.0",
      "name": "Change_BusinessAnnual_Sale_Status",
      "description": "<p>Change BBusinessAnnual Sale Status</p>",
      "group": "BusinessAnnual_Sale_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires BusinessAnnual Sale Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change BusinessAnnual Sale Status',\n     recordList: BusinessAnnual Sale,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessAnnualSaleRoutes.ts",
      "groupTitle": "BusinessAnnual_Sale_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessAnnualSale/getBusinessAnnualSales",
      "title": "Get BusinessAnnual Sales",
      "version": "1.0.0",
      "name": "Get_BusinessAnnual_Sale",
      "description": "<p>Get BusinessAnnual Sale</p>",
      "group": "BusinessAnnual_Sale_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get BusinessAnnual Sale',\n     recordList: BusinessAnnual Sale,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessAnnualSaleRoutes.ts",
      "groupTitle": "BusinessAnnual_Sale_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessAnnualSale/updateBusinessAnnualSale",
      "title": "update BusinessAnnual Sale",
      "version": "1.0.0",
      "name": "Update_BusinessAnnual_Sale",
      "description": "<p>Update BusinessAnnual Sale</p>",
      "group": "BusinessAnnual_Sale_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of BusinessAnnual Sale.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires BusinessAnnual Sale Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update BusinessAnnual Sale',\n     recordList: BusinessAnnual Sale,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessAnnualSaleRoutes.ts",
      "groupTitle": "BusinessAnnual_Sale_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessAnnualSale/insertBusinessAnnualSale",
      "title": "insert BusinessAnnual Sale",
      "version": "1.0.0",
      "name": "insert_BusinessAnnual_Sale",
      "description": "<p>insert BusinessAnnual Sale</p>",
      "group": "BusinessAnnual_Sale_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of BusinessAnnual Sale</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert BusinessAnnual Sale',\n     recordList: BusinessAnnual Sale,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessAnnualSaleRoutes.ts",
      "groupTitle": "BusinessAnnual_Sale_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessNature/activeInactiveBusinessNature",
      "title": "Change BusinessNature",
      "version": "1.0.0",
      "name": "Change_BusinessNature_Status",
      "description": "<p>Change BusinessNature Status</p>",
      "group": "BusinessNature_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires BusinessNature Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change BusinessNature Status',\n     recordList: BusinessNature,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessNatureRoutes.ts",
      "groupTitle": "BusinessNature_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessNature/getBusinessNature",
      "title": "Get BusinessNature",
      "version": "1.0.0",
      "name": "Get_BusinessNature",
      "description": "<p>Get BusinessNature</p>",
      "group": "BusinessNature_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get BusinessNature',\n     recordList: BusinessNature,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessNatureRoutes.ts",
      "groupTitle": "BusinessNature_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessNature/updateBusinessNature",
      "title": "update BusinessNature",
      "version": "1.0.0",
      "name": "Update_BusinessNature",
      "description": "<p>Update BusinessNature</p>",
      "group": "BusinessNature_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of BusinessNature.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires BusinessNaturee Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update BusinessNature',\n     recordList: BusinessNature,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessNatureRoutes.ts",
      "groupTitle": "BusinessNature_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessNature/insertBusinessNature",
      "title": "insert BusinessNature",
      "version": "1.0.0",
      "name": "insert_BusinessNature",
      "description": "<p>insert BusinessNature</p>",
      "group": "BusinessNaturee_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of BusinessNature</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert BusinessNature',\n     recordList: BusinessNature,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessNatureRoutes.ts",
      "groupTitle": "BusinessNaturee_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessExperience/activeInactiveBusinessExperience",
      "title": "Change Business Experience",
      "version": "1.0.0",
      "name": "Change_Business_Experience_Status",
      "description": "<p>Change Business Experience Status</p>",
      "group": "Business_Experience_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Business Experience Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Business Experience Status',\n     recordList: Business Experience,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessExperienceRoute.ts",
      "groupTitle": "Business_Experience_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessExperience/getBusinessExperience",
      "title": "Get Business Experience",
      "version": "1.0.0",
      "name": "Get_Business_Experience",
      "description": "<p>Get Business Experience</p>",
      "group": "Business_Experience_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Business Experience',\n     recordList: Business Experience,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessExperienceRoute.ts",
      "groupTitle": "Business_Experience_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessExperience/updateBusinessExperience",
      "title": "update Business Experience",
      "version": "1.0.0",
      "name": "Update_Business_Experience",
      "description": "<p>Update Business Experience</p>",
      "group": "Business_Experience_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Business Experience</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Business Experience Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Business Experience',\n     recordList: Business Experience,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessExperienceRoute.ts",
      "groupTitle": "Business_Experience_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessExperience/insertBusinessExperience",
      "title": "insert Business Experience",
      "version": "1.0.0",
      "name": "insertBusiness_Experience",
      "description": "<p>insert Business Experience</p>",
      "group": "Business_Experience_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Business Experience</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Business Experience',\n     recordList: Business Experience,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessExperienceRoute.ts",
      "groupTitle": "Business_Experience_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessLoans/insertUpdateBusinessLoanBasicDetail",
      "title": "Insert/Update Business Loan Basic Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Business_Loan_Basic_Detail",
      "description": "<p>Insert/Update Business Loan Basic Detail</p>",
      "group": "Business_Loan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "gender",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "businessAnnualSale",
              "description": "<p>Requires Business Annual Sale.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "businessExperienceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "email",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "residentTypeId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanId",
              "description": "<p>Optional CustomerLoan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanBusinessDetailId",
              "description": "<p>Optional customerLoanEmployment Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerAddressId",
              "description": "<p>Optional customerLoanEmployment Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanCurrentResidentTypeId",
              "description": "<p>Optional customerLoanEmployment Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "loanAgainsrCollateralId",
              "description": "<p>Optional customerLoanEmployment Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Business Loan Basic Detail',\n     recordList: Business Loan Basic Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessloanRoutes.ts",
      "groupTitle": "Business_Loan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/businessLoans/getCustomerBusinessLoanById",
      "title": "Get Customer Business Loan Detail By Id",
      "version": "1.0.0",
      "name": "Get_Customer_Business_Loan_Detail_By_Id",
      "description": "<p>Get Customer Business Loan Detail By Id</p>",
      "group": "Business_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Customer Business Loan Detail By Id',\n     recordList: Business Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/businessLoanRoutes.ts",
      "groupTitle": "Business_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/businessLoans/getIncompleteBusinessLoanDetail",
      "title": "Get Incomplete usiness Loan Detail",
      "version": "1.0.0",
      "name": "Get_Incomplete_Business_Loan_Detail",
      "description": "<p>Get Incomplete Business Loan Detail</p>",
      "group": "Business_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires ServiceId Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Incomplete Business Loan Detail',\n     recordList: Business Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/businessLoanRoutes.ts",
      "groupTitle": "Business_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/businessLoans/insertUpdateBusinessLoanBasicDetail",
      "title": "Insert/Update Business Loan Basic Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Business_Loan_Basic_Detail",
      "description": "<p>Insert/Update Business Loan Basic Detail</p>",
      "group": "Business_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "gender",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires loanAmount.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires employmentTypeId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "businessAnnualSale",
              "description": "<p>Requires businessAnnualSale.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "businessExperienceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "email",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "residentTypeId",
              "description": "<p>Requires residentTypeId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanId",
              "description": "<p>Optional CustomerLoan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanBusinessDetailId",
              "description": "<p>Optional customerLoanEmployment Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerAddressId",
              "description": "<p>Optional customerAddressId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanCurrentResidentTypeId",
              "description": "<p>Optional customerLoanCurrentResidentTypeId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "loanAgainsrCollateralId",
              "description": "<p>Optional loanAgainsrCollateralId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Business Loan Basic Detail',\n     recordList: Business Loan Basic Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/businessLoanRoutes.ts",
      "groupTitle": "Business_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/businessLoans/insertUpdateBusinessLoanBusinessDetail",
      "title": "Insert/Update Business Loan Business Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Business_Loan_Business_Detail",
      "description": "<p>Insert/Update Business Loan Business Detail</p>",
      "group": "Business_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanBusinessDetailId",
              "description": "<p>Required Customer Loan Business Detail Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "companyTypeId",
              "description": "<p>Required Customer Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "industryTypeId",
              "description": "<p>Required Industry Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "businessNatureId",
              "description": "<p>Required Business Nature Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "businessAnnualProfitId",
              "description": "<p>Required Business Annual Profit Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "primaryBankId",
              "description": "<p>Required Bank Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "currentluPayEmi",
              "description": "<p>Optional Company Name.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Business Loan Basic Detail',\n     recordList: Business Loan Basic Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/businessLoanRoutes.ts",
      "groupTitle": "Business_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/businessLoans/InsertUpdateBusinessLoanMoreBasicDetail",
      "title": "Insert/Update Business Loan More Basic Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Business_Loan_More_Basic_Detail",
      "description": "<p>Insert/Update Business Loan More Basic Detail</p>",
      "group": "Business_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanBusinessDetailId",
              "description": "<p>Required Customer Loan Business Detail Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerAddressId",
              "description": "<p>Required Customer Address Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "businessName",
              "description": "<p>Required Business Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "businessGstNo",
              "description": "<p>Required Business Gst No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional Address Line 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional Address Line 2.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update More Basic Loan Basic Detail',\n     recordList: Business Loan More Basic Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/businessLoanRoutes.ts",
      "groupTitle": "Business_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/businessLoans/uploadBusinessLoanDocument",
      "title": "Uploan Business Loan Document",
      "version": "1.0.0",
      "name": "Uploan_Business_Loan_Document",
      "description": "<p>Uploan Business Loan Document</p>",
      "group": "Business_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "loanDocuments",
              "description": "<p>Required Loan Documents.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update More Basic Loan Basic Detail',\n     recordList: Business Loan More Basic Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/businessLoanRoutes.ts",
      "groupTitle": "Business_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/businessLoans/insertUpdateBusinessLoanBusinessDetail",
      "title": "Insert/Update Business Loan Business Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Business_Loan_Business_Detail",
      "description": "<p>Insert/Update Business Loan Business Detail</p>",
      "group": "Business_Loan_-_admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanBusinessDetailId",
              "description": "<p>Required Customer Loan Business Detail Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "companyTypeId",
              "description": "<p>Required Customer Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "industryTypeId",
              "description": "<p>Required Industry Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "businessNatureId",
              "description": "<p>Required Business Nature Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "businessAnnualProfitId",
              "description": "<p>Required Business Annual Profit Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "primaryBankId",
              "description": "<p>Required Bank Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "currentluPayEmi",
              "description": "<p>Optional Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessName",
              "description": "<p>Optional business Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gstNumber",
              "description": "<p>Optional gst Number.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Business Loan Basic Detail',\n     recordList: Business Loan Basic Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessloanRoutes.ts",
      "groupTitle": "Business_Loan_-_admin"
    },
    {
      "type": "post",
      "url": "/api/partner/businessLoans/getIncompleteBusinessLoanDetail",
      "title": "Get Incomplete Business Loan Detail",
      "version": "1.0.0",
      "name": "Get_Incomplete_Business_Loan_Detail",
      "description": "<p>Get Incomplete Business Loan Detail</p>",
      "group": "Business_Loan_-_partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires ServiceId Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Incomplete Business Loan Detail',\n     recordList: Update Business Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/businessLoanRoutes.ts",
      "groupTitle": "Business_Loan_-_partner"
    },
    {
      "type": "post",
      "url": "/api/admin/businessLoans/getBusinessLoans",
      "title": "Get Business Loans",
      "version": "1.0.0",
      "name": "Get_Business_Loans",
      "description": "<p>Get Business Loans</p>",
      "group": "Business_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Required Service Id</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Business Loans ',\n     recordList: Business Loans ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessloanRoutes.ts",
      "groupTitle": "Business_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/businessLoans/getBusinessLoanById",
      "title": "Get Business Loans",
      "version": "1.0.0",
      "name": "Get_Business_Loans",
      "description": "<p>Get Business Loans</p>",
      "group": "Business_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required Id of customerLoans</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Business Loans ',\n     recordList: Business Loans ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/businessloanRoutes.ts",
      "groupTitle": "Business_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/cities/getCityByPincode",
      "title": "Get Cities By Pincode",
      "version": "1.0.0",
      "name": "Get_Cities_By_Pincode",
      "description": "<p>Get Cities By Pincode</p>",
      "group": "City_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires Pincode.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Cities By Pincode',\n     recordList: City,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/citiesRoutes.ts",
      "groupTitle": "City_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/web/cities/getCities",
      "title": "Get Cities",
      "version": "1.0.0",
      "name": "Get_Cities",
      "description": "<p>Get Cities</p>",
      "group": "City_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Cities',\n     recordList: City,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/citiesRoutes.ts",
      "groupTitle": "City_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/admin/coApplicantRelation/activeInactiveCoApplicantRelation",
      "title": "Change CoApplicant Relation",
      "version": "1.0.0",
      "name": "Change_CoApplicant_Relation_Status",
      "description": "<p>Change CoApplicant Relation Status</p>",
      "group": "CoApplicant_Relation_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires CoApplicant Relation Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change CoApplicant Relation Status',\n     recordList: CoApplicant Relation,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/coApplicantRelationRoutes.ts",
      "groupTitle": "CoApplicant_Relation_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/coApplicantRelation/getCoApplicantRelation",
      "title": "Get CoApplicant Relation",
      "version": "1.0.0",
      "name": "Get_CoApplicant_Relation",
      "description": "<p>Get CoApplicant Relation</p>",
      "group": "CoApplicant_Relation_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get CoApplicant Relation',\n     recordList: CoApplicant Relation,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/coApplicantRelationRoutes.ts",
      "groupTitle": "CoApplicant_Relation_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/coApplicantRelation/updateCoApplicantRelation",
      "title": "update CoApplicant Relation",
      "version": "1.0.0",
      "name": "Update_CoApplicant_Relation",
      "description": "<p>Update CoApplicant Relation</p>",
      "group": "CoApplicant_Relation_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of CoApplicant Relation.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires CoApplicant Relation Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update CoApplicant Relation',\n     recordList: CoApplicant Relation,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/coApplicantRelationRoutes.ts",
      "groupTitle": "CoApplicant_Relation_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/coApplicantRelation/insertCoApplicantRelation",
      "title": "insert CoApplicant Relation",
      "version": "1.0.0",
      "name": "insert_CoApplicant_Relation",
      "description": "<p>insert CoApplicant Relation</p>",
      "group": "CoApplicant_Relation_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of CoApplicant Relation</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert CoApplicant Relation',\n     recordList: CoApplicant Relation,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/coApplicantRelationRoutes.ts",
      "groupTitle": "CoApplicant_Relation_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/users/getAdminCommission",
      "title": "Admin Get Commission",
      "version": "1.0.0",
      "name": "Admin_Get_User",
      "description": "<p>Admin Get Commission</p>",
      "group": "Commission_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Requires Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Commission',\n     recordList: Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/usersRoutes.ts",
      "groupTitle": "Commission_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/commissionTemplates/getCommissionTemplate",
      "title": "Get Commission Template",
      "version": "1.0.0",
      "name": "Get_Commission_Template",
      "description": "<p>Get Commission Template</p>",
      "group": "Commission_Template_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Commission Template',\n     recordList: Commission Template,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/commissionTemplateRoutes.ts",
      "groupTitle": "Commission_Template_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/commissionTemplates/insertUpdateCommissionTemplate",
      "title": "insert Commission Template",
      "version": "1.0.0",
      "name": "insert/Update_Commission_Template",
      "description": "<p>insert Commission Template</p>",
      "group": "Commission_Template_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "commissionTypeId",
              "description": "<p>Requires Commission Template Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "commission",
              "description": "<p>Requires Commission.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Commission Template',\n     recordList: Commission Template,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/commissionTemplateRoutes.ts",
      "groupTitle": "Commission_Template_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/commssionTypes/getCommissionType",
      "title": "Get Commission Type",
      "version": "1.0.0",
      "name": "Get_Commission_Type",
      "description": "<p>Get Commission Type</p>",
      "group": "Commission_Type_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Commission Type',\n     recordList: Commission Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/commissionTypeRoutes.ts",
      "groupTitle": "Commission_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/partner/commissionTypes/getCommisionTemplateByBankAndServiceId",
      "title": "Get Commission Types",
      "version": "1.0.0",
      "name": "Get_Commission_Templates",
      "description": "<p>Get CommissionTemplates</p>",
      "group": "Commission_Types_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get CommissionTemplates',\n     recordList: CommissionTemplates,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/commissionTypesRoutes.ts",
      "groupTitle": "Commission_Types_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/commissionTypes/getCommissionType",
      "title": "Get Commission Types",
      "version": "1.0.0",
      "name": "Get_Commission_Types",
      "description": "<p>Get Commission Types</p>",
      "group": "Commission_Types_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Commission Types',\n     recordList: Commission Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/commissionTypesRoutes.ts",
      "groupTitle": "Commission_Types_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/commissionTypes/getCommissionTemplate",
      "title": "Get Commission Types",
      "version": "1.0.0",
      "name": "Get_Commission_Types",
      "description": "<p>Get CommissionTemplates</p>",
      "group": "Commission_Types_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get CommissionTemplates',\n     recordList: CommissionTemplates,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/commissionTypesRoutes.ts",
      "groupTitle": "Commission_Types_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/admin/companyType/getCompanyType",
      "title": "Get Company Type",
      "version": "1.0.0",
      "name": "Get_Company_Type",
      "description": "<p>Get Company Type</p>",
      "group": "Company_Type_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Company Type',\n     recordList: Company Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/companyTypeRoutes.ts",
      "groupTitle": "Company_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/web/companyTypes/getCompanyTypes",
      "title": "Get Company Types",
      "version": "1.0.0",
      "name": "Get_Company_Types",
      "description": "<p>Get Company Types</p>",
      "group": "Company_Types_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Company Types',\n     recordList: Company Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/companyTypeRoutes.ts",
      "groupTitle": "Company_Types_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/web/contactUs/insertContactUs",
      "title": "Insert Contact Detail",
      "version": "1.0.0",
      "name": "Insert_Contact_Detail",
      "description": "<p>Insert Contact Detail</p>",
      "group": "ContactUs_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Contact Detail',\n     recordList: ContactUs,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/contactusRoutes.ts",
      "groupTitle": "ContactUs_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/web/contactUs/insertNewsLetterSubscription",
      "title": "Register Email For News",
      "version": "1.0.0",
      "name": "Register_Email_For_News",
      "description": "<p>Register Email For News</p>",
      "group": "ContactUs_-_WebSite",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "string",
              "optional": false,
              "field": "email",
              "description": "<p>Required email Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Register Email For News',\n     recordList: ContactUs,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/contactusRoutes.ts",
      "groupTitle": "ContactUs_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/web/countries/getCountries",
      "title": "Get Countries",
      "version": "1.0.0",
      "name": "Get_Countries",
      "description": "<p>Get Countries</p>",
      "group": "Country_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Countries',\n     recordList: Country,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/countriesRoutes.ts",
      "groupTitle": "Country_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/web/courses/getCourses",
      "title": "Get Courses",
      "version": "1.0.0",
      "name": "Get_Courses",
      "description": "<p>Get Courses</p>",
      "group": "Course_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Courses',\n     recordList: Course,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/courseRoutes.ts",
      "groupTitle": "Course_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/admin/creditCard/getCreditCard",
      "title": "Get CreditCard",
      "version": "1.0.0",
      "name": "Get_CreditCard",
      "description": "<p>Get CreditCard</p>",
      "group": "CreditCard_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get CreditCard',\n     recordList: CreditCard,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/creditCardRoutes.ts",
      "groupTitle": "CreditCard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/creditCard/getCreditCardById",
      "title": "Get CreditCard ById",
      "version": "1.0.0",
      "name": "Get_CreditCard",
      "description": "<p>Get CreditCard</p>",
      "group": "CreditCard_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "customerId",
              "description": "<p>Required customerId</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "customercreditcardId",
              "description": "<p>required customerCreditCardId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get CreditCard',\n     recordList: CreditCard,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/creditCardRoutes.ts",
      "groupTitle": "CreditCard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/getCreditCardStatuses",
      "title": "get Customer Credit Card Statuses",
      "version": "1.0.0",
      "name": "get_Customer_Credit_Card_Statuses",
      "description": "<p>get Customer Credit Card Statuses</p>",
      "group": "Credit_Card_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'get Customer Credit Card Status',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/changeCreditCardOfferStatus",
      "title": "Change Credit Card Offer Status",
      "version": "1.0.0",
      "name": "Change_Credit_Card_Offer_Status",
      "description": "<p>Change Credit Card Offer Status</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerCreditCardId",
              "description": "<p>Requires Customer Credit card Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "creditCardStatusId",
              "description": "<p>Requires Credit card Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Credit Card Offer Status',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/insertUpdateCreditCardEmploymentDetail",
      "title": "Insert/Update Credit Card Employment Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Credit_Card_Employment_Detail",
      "description": "<p>Insert/Update Credit Card Employment Detail</p>",
      "group": "Credit_Card_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Credit Card Employment Detail',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/insertUpdateCreditCardProfileDetail",
      "title": "Insert/Update Credit Card Profile Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Credit_Card_Profile_Detail",
      "description": "<p>Insert/Update Credit Card Profile Detail</p>",
      "group": "Credit_Card_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Credit Card Profile Detail',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/insertUpdateCustomerAddress",
      "title": "Insert/Update Customer Address",
      "version": "1.0.0",
      "name": "Insert/Update_Customer_Address",
      "description": "<p>Insert/Update Customer Address</p>",
      "group": "Credit_Card_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Customer Address',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/insertUpdateCustomerWorkAddress",
      "title": "Insert/Update Customer Work Address",
      "version": "1.0.0",
      "name": "Insert/Update_Customer_Work_Address",
      "description": "<p>Insert/Update Custome Work Address</p>",
      "group": "Credit_Card_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Customer Work Address',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/changeEmploymentType",
      "title": "change employment type for credit card",
      "version": "1.0.0",
      "name": "change_employment_type_for_credit_card",
      "description": "<p>change employment type for credit card</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerCreditCardId",
              "description": "<p>Requires Customer Credit card Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'change employment type for credit card',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/chooseCommunicationAddress",
      "title": "choose Communication Address",
      "version": "1.0.0",
      "name": "choose_Communication_Address",
      "description": "<p>choose Communication Address</p>",
      "group": "Credit_Card_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'choose Communication Address',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/creditCardEligibility",
      "title": "creditCardEligibility",
      "version": "1.0.0",
      "name": "creditCardEligibility",
      "description": "<p>creditCardEligibility</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerCreditCardId",
              "description": "<p>Requires Customer Credit card Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'creditCardEligibility',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/getIncompleteCreditCardDetail",
      "title": "getIncompleteCreditCardDetail",
      "version": "1.0.0",
      "name": "getIncompleteCreditCardDetail",
      "description": "<p>getIncompleteCreditCardDetail</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'getIncompleteCreditCardDetaill',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/getCustomerCreditCardById",
      "title": "GetCustomerCreditCardById",
      "version": "1.0.0",
      "name": "getIncompleteCreditCardDetail",
      "description": "<p>getIncompleteCreditCardDetail</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerCreditCardId",
              "description": "<p>Requires Customer Credit card Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'GetCustomerCreditCardById',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/getCustomerCreditCardRejectionReason",
      "title": "get Customer Credit Card Rejection Reason",
      "version": "1.0.0",
      "name": "get_Customer_Credit_Card_Rejection_Reason",
      "description": "<p>get Customer Credit Card Rejection Reason</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerCreditCardId",
              "description": "<p>Requires Customer Credit card Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'get Customer Credit Card Rejection Reason',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/getCompletedCreditCards",
      "title": "get Customer Credit Card Rejection Reason",
      "version": "1.0.0",
      "name": "get_Customer_Credit_Card_Rejection_Reason",
      "description": "<p>get Customer Credit Card Rejection Reason</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerCreditCardId",
              "description": "<p>Requires Customer Credit card Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'get Customer Credit Card Rejection Reason',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/insertUpdateCustomerCreditCardOffer",
      "title": "insert/Update Customer CreditCard Offer",
      "version": "1.0.0",
      "name": "insert/Update_Customer_CreditCard_Offer",
      "description": "<p>insert/Update Customer CreditCard Offer</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerCreditCardId",
              "description": "<p>Requires Customer Credit card Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankCreditCardId",
              "description": "<p>Requires BAnk Credit card Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "id",
              "description": "<p>Optional Customer Credit card Offer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "referenceNo",
              "description": "<p>Optional pass While Update.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert/Update Customer CreditCard Offer',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/insertUpdateCustomerCreditCardOffer",
      "title": "insert/Update Customer CreditCard Offer",
      "version": "1.0.0",
      "name": "insert/Update_Customer_CreditCard_Offer",
      "description": "<p>insert/Update Customer CreditCard Offer</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerCreditCardId",
              "description": "<p>Requires Customer Credit card Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankCreditCardId",
              "description": "<p>Requires BAnk Credit card Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "id",
              "description": "<p>Optional Customer Credit card Offer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "referenceNo",
              "description": "<p>Optional pass While Update.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert/Update Customer CreditCard Offer',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/creditCards/inserUpdaterejectCreditCardOffer",
      "title": "insert/Update Reject Credit Card Offer",
      "version": "1.0.0",
      "name": "insert/Update_Reject_Credit_Card_Offer",
      "description": "<p>insert/Update Reject Credit Card Offer</p>",
      "group": "Credit_Card_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerCreditCardId",
              "description": "<p>Requires Customer Credit card Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "creditCardStatusId",
              "description": "<p>Requires Credit Card Status Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "reason",
              "description": "<p>Requires Customer Credit Card Rejection Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "id",
              "description": "<p>Optional Customer Credit Card Rejection Reason Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": true,
              "field": "reasons",
              "description": "<p>Optional Resons Array.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert/Update Reject Credit Card Offer',\n     recordList: Credit Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/partner/homeLoans/getIncompleteCreditCard",
      "title": "Get Incomplete Credit Card Detail",
      "version": "1.0.0",
      "name": "Get_Incomplete_Credit_Card_Detail",
      "description": "<p>Get Incomplete Credit Card Detail</p>",
      "group": "Credit_Card_-_partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires ServiceId Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Incomplete Credit Card Detail',\n     recordList: Update Credit Card Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/creditCardRoutes.ts",
      "groupTitle": "Credit_Card_-_partner"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/becomePartner",
      "title": "Accept Partner Request From Website",
      "version": "1.0.0",
      "name": "Accept_Partner_Request_From_Website",
      "description": "<p>Accept Partner Request From Website</p>",
      "group": "Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Required Become Partner Request Id</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Required Contact No.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Required Assign Role Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "partnerCode",
              "description": "<p>Optional Partner Code.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Assign RoleToCustomer',\n     recordList: Assign RoleToCustomer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/assignRoleToCustomer",
      "title": "AssignRoleToCustomer",
      "version": "1.0.0",
      "name": "Assign_Role_To_Customer",
      "description": "<p>Assign Role To Customer</p>",
      "group": "Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Assign RoleToCustomer',\n     recordList: Assign RoleToCustomer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/checkContactNoExist",
      "title": "Check ContactNo",
      "version": "1.0.0",
      "name": "Check_ContactNo",
      "description": "<p>Check ContactNo</p>",
      "group": "Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Required ContactNo</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "roleId",
              "description": "<p>Required ContactNo</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Check ContactNo',\n     recordList: Customer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/deleteCustomerById",
      "title": "Delete Customer By Id",
      "version": "1.0.0",
      "name": "Delete_Customer_By_Id",
      "description": "<p>Delete Customer By Id</p>",
      "group": "Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Required Customer Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Delete Customer By Id',\n     recordList: Customer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/getBecomePartnerRequest",
      "title": "Get BecomePartnerRequest",
      "version": "1.0.0",
      "name": "Get_BecomePartnerRequest",
      "description": "<p>Get BecomePartnerRequest</p>",
      "group": "Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get BecomePartnerRequest',\n     recordList: BecomePartnerRequest,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/getCustomers",
      "title": "Get Customer",
      "version": "1.0.0",
      "name": "Get_Customer",
      "description": "<p>Get Customer</p>",
      "group": "Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Customer',\n     recordList: Customer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/getCustomerById",
      "title": "Get Customer",
      "version": "1.0.0",
      "name": "Get_Customer",
      "description": "<p>Get Customer</p>",
      "group": "Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Customer',\n     recordList: Customer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/getState",
      "title": "Get State",
      "version": "1.0.0",
      "name": "Get_State",
      "description": "<p>Get State</p>",
      "group": "Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get State',\n     recordList: State,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/otherLoans/getOtherLoanDetailByUserId",
      "title": "Get Partner Bank Detail",
      "version": "1.0.0",
      "name": "Get_Other_Loan_Customers",
      "description": "<p>Get Other Loan Customers</p>",
      "group": "Customer_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Requires User Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Other Loan Customers',\n     recordList: Other Loan Customers,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/otherLoanRoutes.ts",
      "groupTitle": "Customer_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/dsa/getDsa",
      "title": "Get DSA",
      "version": "1.0.0",
      "name": "Get_DSA",
      "description": "<p>Get DSA</p>",
      "group": "DSA_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get DSA',\n     recordList: DSA,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/dsaRoutes.ts",
      "groupTitle": "DSA_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/dsa/getDsaById",
      "title": "Get DSA",
      "version": "1.0.0",
      "name": "Get_DSA",
      "description": "<p>Get DSA</p>",
      "group": "DSA_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "id",
              "description": "<p>id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get DSA',\n     recordList: DSA,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/dsaRoutes.ts",
      "groupTitle": "DSA_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/dsa/verifiedDsa",
      "title": "Verified DSA",
      "version": "1.0.0",
      "name": "Verified_DSA",
      "description": "<p>Verified DSA</p>",
      "group": "DSA_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "id",
              "description": "<p>Required id</p>"
            },
            {
              "group": "Parameter",
              "type": "Number",
              "optional": true,
              "field": "userId",
              "description": "<p>Required userId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Verified DSA',\n     recordList: DSA,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/dsaRoutes.ts",
      "groupTitle": "DSA_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/getDashboard",
      "title": "Get Dashboard",
      "version": "1.0.0",
      "name": "Get_Dashboard",
      "description": "<p>Get Dashboard</p>",
      "group": "Dashboard_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Dashboard',\n     recordList: Dashboard,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/dashboardRoutes.ts",
      "groupTitle": "Dashboard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/dashboard/getDisbursedApplication",
      "title": "Get DisbursedApplication",
      "version": "1.0.0",
      "name": "Get_DisbursedApplication",
      "description": "<p>Get DisbursedApplication</p>",
      "group": "Dashboard_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get DisbursedApplication',\n     recordList: DisbursedApplication,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/dashboardRoutes.ts",
      "groupTitle": "Dashboard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/getPendingApplication",
      "title": "Get PendingApplication",
      "version": "1.0.0",
      "name": "Get_PendingApplication",
      "description": "<p>Get PendingApplication</p>",
      "group": "Dashboard_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get PendingApplication',\n     recordList: PendingApplication,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/dashboardRoutes.ts",
      "groupTitle": "Dashboard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/dashboard/getTop10Performer",
      "title": "Get getTop10Performer",
      "version": "1.0.0",
      "name": "Get_getTop10Performer",
      "description": "<p>Get getTop10Performer</p>",
      "group": "Dashboard_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get getTop10Performer',\n     recordList: Top10Performer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/dashboardRoutes.ts",
      "groupTitle": "Dashboard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/dashboard/getTopPerformers",
      "title": "Get getTopPerformers",
      "version": "1.0.0",
      "name": "Get_getTopPerformers",
      "description": "<p>Get getTopPerformers</p>",
      "group": "Dashboard_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get getTopPerformers',\n     recordList: TopPerformers,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/dashboardRoutes.ts",
      "groupTitle": "Dashboard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/web/degrees/getDegrees",
      "title": "Get Degrees",
      "version": "1.0.0",
      "name": "Get_Degrees",
      "description": "<p>Get Degrees</p>",
      "group": "Degree_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Degrees',\n     recordList: Degree,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/degreeRoutes.ts",
      "groupTitle": "Degree_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/partner/designations/getDesignations",
      "title": "Get Designations",
      "version": "1.0.0",
      "name": "Get_Designations",
      "description": "<p>Get Designations</p>",
      "group": "Designation_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Designations',\n     recordList: Designations,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/designationRoutes.ts",
      "groupTitle": "Designation_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/documents/getDocuments",
      "title": "Get Documents",
      "version": "1.0.0",
      "name": "Get_Documents",
      "description": "<p>Get Documents</p>",
      "group": "Document_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Documents',\n     recordList: Documents,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/documentsRoutes.ts",
      "groupTitle": "Document_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/web/documents/getDocuments",
      "title": "Get Documents",
      "version": "1.0.0",
      "name": "Get_Documents",
      "description": "<p>Get Documents</p>",
      "group": "Document_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Documents',\n     recordList: Document,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/documentRoutes.ts",
      "groupTitle": "Document_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/admin/documentMasters/activeInactiveDocumentMasters",
      "title": "Change Document Master Status",
      "version": "1.0.0",
      "name": "Change_Document_Master_Status",
      "description": "<p>Change Document Master Status</p>",
      "group": "Document_Master_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Document Master Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": false,
              "field": "isActive",
              "description": "<p>Requires Status.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Document Master Status',\n     recordList: Document Master,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/documentMasterRoutes.ts",
      "groupTitle": "Document_Master_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/documentMasters/getDocumentMaster",
      "title": "Get Document Master",
      "version": "1.0.0",
      "name": "Get_Document_Master",
      "description": "<p>Get Document Master</p>",
      "group": "Document_Master_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Document Master',\n     recordList: Document Master,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/documentMasterRoutes.ts",
      "groupTitle": "Document_Master_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/documentMasters/updateDocumentMasters",
      "title": "Update Document Master",
      "version": "1.0.0",
      "name": "Update_Document_Master",
      "description": "<p>Update Document Master</p>",
      "group": "Document_Master_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Document Master Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Document Master Name.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Document Master',\n     recordList: Document Master,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/documentMasterRoutes.ts",
      "groupTitle": "Document_Master_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/documentMasters/insertDocumentMasters",
      "title": "insert Document Master",
      "version": "1.0.0",
      "name": "insert_Document_Master",
      "description": "<p>insert Document Master</p>",
      "group": "Document_Master_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Document Master Name.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Document Master',\n     recordList: Document Master,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/documentMasterRoutes.ts",
      "groupTitle": "Document_Master_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/partner/educationTypes/getEducationTypes",
      "title": "Get Education Types",
      "version": "1.0.0",
      "name": "Get_Education_Types",
      "description": "<p>Get Education Types</p>",
      "group": "Education_Types_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Education Types',\n     recordList: Education Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/educationTypeRoutes.ts",
      "groupTitle": "Education_Types_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentNature/activeInactiveEmploymentNature",
      "title": "Change Employment Nature Status",
      "version": "1.0.0",
      "name": "Change_Employment_Nature_Status",
      "description": "<p>Change Employment Nature Status</p>",
      "group": "Employment_Nature_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Employment Nature Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Employment Nature Status',\n     recordList: Employment Nature,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentNatureRoutes.ts",
      "groupTitle": "Employment_Nature_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentNature/getEmploymentNature",
      "title": "Get Employment Nature",
      "version": "1.0.0",
      "name": "Get_Employment_Nature",
      "description": "<p>Get Employment Nature</p>",
      "group": "Employment_Nature_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Employment Nature',\n     recordList: Employment Nature,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentNatureRoutes.ts",
      "groupTitle": "Employment_Nature_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentNature/updateEmploymentNature",
      "title": "update Employment Nature",
      "version": "1.0.0",
      "name": "Update_Employment_Nature",
      "description": "<p>Update Employment Nature</p>",
      "group": "Employment_Nature_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Employment Nature.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Employment ServiceType Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Employment Nature',\n     recordList: Employment Nature,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentNatureRoutes.ts",
      "groupTitle": "Employment_Nature_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentNature/insertEmploymentNature",
      "title": "insert Employment Nature",
      "version": "1.0.0",
      "name": "insert_Employment_Nature",
      "description": "<p>insert Employment Nature</p>",
      "group": "Employment_Nature_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Employment Nature</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Employment Nature',\n     recordList: Employment Nature,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentNatureRoutes.ts",
      "groupTitle": "Employment_Nature_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentServiceType/activeInactiveEmploymentServiceType",
      "title": "Change Employment ServiceType Status",
      "version": "1.0.0",
      "name": "Change_Employment_ServiceType_Status",
      "description": "<p>Change Employment ServiceType Status</p>",
      "group": "Employment_ServiceType_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Employment ServiceType Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'ChangeEmployment ServiceType Status',\n     recordList: Employment ServiceType,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentServiceTypeRoutes.ts",
      "groupTitle": "Employment_ServiceType_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentServiceType/getEmploymentServiceType",
      "title": "Get Employment ServiceType",
      "version": "1.0.0",
      "name": "Get_Employment_ServiceType",
      "description": "<p>Get Employment ServiceType</p>",
      "group": "Employment_ServiceType_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Employment ServiceType',\n     recordList: Employment ServiceType,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentServiceTypeRoutes.ts",
      "groupTitle": "Employment_ServiceType_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentServiceType/updateEmploymentServiceType",
      "title": "update Employment ServiceType",
      "version": "1.0.0",
      "name": "Update_Employment_ServiceType",
      "description": "<p>Update Employment ServiceType</p>",
      "group": "Employment_ServiceType_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Employment ServiceType.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Employment ServiceType Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Employment ServiceType',\n     recordList: Employment ServiceType,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentServiceTypeRoutes.ts",
      "groupTitle": "Employment_ServiceType_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentServiceType/insertEmploymentServiceType",
      "title": "insert Employment ServiceType",
      "version": "1.0.0",
      "name": "insert_Employment_ServiceType",
      "description": "<p>insertEmployment ServiceType</p>",
      "group": "Employment_ServiceType_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Employment ServiceType</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Employment ServiceType',\n     recordList: Employment ServiceType,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentServiceTypeRoutes.ts",
      "groupTitle": "Employment_ServiceType_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentTypes/activeInactiveEmploymentType",
      "title": "Change Employment Types Status",
      "version": "1.0.0",
      "name": "Change_Employment_Types_Status",
      "description": "<p>Change Employment Types Status</p>",
      "group": "Employment_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Employment Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Employment Types Status',\n     recordList: Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentTypeRoutes.ts",
      "groupTitle": "Employment_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentTypes/getEmploymentTypes",
      "title": "Get Employment Types",
      "version": "1.0.0",
      "name": "Get_Employment_Types",
      "description": "<p>Get Employment Types</p>",
      "group": "Employment_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Employment Types',\n     recordList: Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentTypeRoutes.ts",
      "groupTitle": "Employment_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/employmentTypes/insertEmploymentType",
      "title": "insert Employment Types",
      "version": "1.0.0",
      "name": "insert_Employment_Types",
      "description": "<p>insert Employment Types</p>",
      "group": "Employment_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Employment Type Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "number",
              "optional": false,
              "field": "parentId",
              "description": "<p>Optional id of employmentType.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Employment Types',\n     recordList: Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentTypeRoutes.ts",
      "groupTitle": "Employment_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceTypes/updateServiceType",
      "title": "update Service Types",
      "version": "1.0.0",
      "name": "update_Employment_Types",
      "description": "<p>update Employment Types</p>",
      "group": "Employment_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "number",
              "optional": false,
              "field": "id",
              "description": "<p>Requires id of Employment Type .</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Employment Type Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "number",
              "optional": false,
              "field": "parentId",
              "description": "<p>Optional id of Employment Type.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Employment Types',\n     recordList: Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/employmentTypeRoutes.ts",
      "groupTitle": "Employment_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/employmentTypes/getEmploymentTypesByServiceId",
      "title": "Get Employment Types By ServiceId",
      "version": "1.0.0",
      "name": "Get_Employment_Types_By_ServiceId",
      "description": "<p>Get Employment Types By ServiceId</p>",
      "group": "Employment_Types_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Employment Types By ServiceId',\n     recordList: Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/employmentTypesRoutes.ts",
      "groupTitle": "Employment_Types_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/partner/employmentTypes/getEmploymentTypes",
      "title": "Get Education Types",
      "version": "1.0.0",
      "name": "Get_Employment_Types",
      "description": "<p>Get Employment Types</p>",
      "group": "Employment_Types_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Employment Types',\n     recordList: Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/employmentTypeRoutes.ts",
      "groupTitle": "Employment_Types_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/web/employmentTypes/getEmploymentTypes",
      "title": "Get Employment Types",
      "version": "1.0.0",
      "name": "Get_Employment_Types",
      "description": "<p>Get Employment Types</p>",
      "group": "Employment_Types_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Employment Types',\n     recordList: Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/employmenttypeRoutes.ts",
      "groupTitle": "Employment_Types_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/admin/faqs/getFaqCategories",
      "title": "Get FAQ Category",
      "version": "1.0.0",
      "name": "Get_FAQ_Category",
      "description": "<p>Get FAQ Category</p>",
      "group": "FAQ_Category_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get FAQ Category',\n     recordList: FAQ Category,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/faqsRoutes.ts",
      "groupTitle": "FAQ_Category_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/faqs/insertUpdateFaqCategories",
      "title": "insert FAQ Category",
      "version": "1.0.0",
      "name": "insert_FAQ_Category",
      "description": "<p>insert FAQ Category</p>",
      "group": "FAQ_Category_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "categoryName",
              "description": "<p>Requires categoryName of FAQ Category.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert FAQ Category',\n     recordList: FAQ Category,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/faqsRoutes.ts",
      "groupTitle": "FAQ_Category_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/faqs/getFaqType",
      "title": "Get FAQs",
      "version": "1.0.0",
      "name": "Get_FAQ_Type",
      "description": "<p>Get FAQ Type</p>",
      "group": "FAQ_Type_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get FAQ Type',\n     recordList: FAQ Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/faqsRoutes.ts",
      "groupTitle": "FAQ_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/faqs/getFaqs",
      "title": "Get FAQs",
      "version": "1.0.0",
      "name": "Get_FAQs",
      "description": "<p>Get FAQs</p>",
      "group": "FAQs_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get FAQs',\n     recordList: FAQs,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/faqsRoutes.ts",
      "groupTitle": "FAQs_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/faqs/insertUpdateFaqs",
      "title": "insert FAQs",
      "version": "1.0.0",
      "name": "insert_FAQs",
      "description": "<p>insert FAQs</p>",
      "group": "FAQs_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "questionText",
              "description": "<p>Requires questionText of FAQs.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "answerText",
              "description": "<p>Requires answerText of FAQs.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert FAQs',\n     recordList: FAQs,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/faqsRoutes.ts",
      "groupTitle": "FAQs_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/partner/faqs/getFaqCategories",
      "title": "Get Faqs Categories",
      "version": "1.0.0",
      "name": "Get_Faqs_Categories",
      "description": "<p>Get Faqs Categories</p>",
      "group": "Faqs_Categories_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Faqs Categories',\n     recordList: Faqs Categories,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/faqsRoutes.ts",
      "groupTitle": "Faqs_Categories_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/insertUpdateHomeLoanBasicDetail",
      "title": "Insert/Update Home Loan Basic Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Home_Loan_Customer_Detail",
      "description": "<p>Insert/Update Home Loan Customer Detail</p>",
      "group": "Home_Loan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Customer Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "birthdate",
              "description": "<p>Requires Customer Birth Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "maritalStatusId",
              "description": "<p>Requires Martial Status Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires Loan Amount.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Home Loan Basic Detail',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/homeLoans/insertUpdateHomeLoanPropertyDetail",
      "title": "Insert/Update Home Loan Customer Property Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Home_Loan_Customer_Property_Detail",
      "description": "<p>Insert/Update Home Loan Customer Property Detail</p>",
      "group": "Home_Loan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decimal",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires Loan AMount.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "propertyTypeId",
              "description": "<p>Requires Propert TypeId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "propertyPurchaseValue",
              "description": "<p>Requires Property Purchase Value.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "propertyCityId",
              "description": "<p>Requires Property City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "propertyCity",
              "description": "<p>Requires Property City.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "propertyDistrict",
              "description": "<p>Requires Property District.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "propertyState",
              "description": "<p>Requires Property State.</p>"
            },
            {
              "group": "Parameter",
              "type": "Object",
              "optional": false,
              "field": "customerAddress",
              "description": "<p>Requires CustomerAddresses.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Home Loan Customer Property Detail',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/getCustomerHomeLoanById",
      "title": "Get Customer Home Loan Detail By Id",
      "version": "1.0.0",
      "name": "Get_Customer_Home_Loan_Detail_By_Id",
      "description": "<p>Get Customer Home Loan Detail By Id</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Customer Home Detail Loan By Id',\n     recordList: Home Loan Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/getIncompleteHomeLoanDetail",
      "title": "Get Incomplete Home Loan Detail",
      "version": "1.0.0",
      "name": "Get_Incomplete_Home_Loan_Detail",
      "description": "<p>Get Incomplete Home Loan Detail</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires ServiceId Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Incomplete Home Loan Detail',\n     recordList: Update Home Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/insertUpdateCustomerAddress",
      "title": "Insert/Update Customer Address",
      "version": "1.0.0",
      "name": "Insert/Update_Customer_Address",
      "description": "<p>Insert/Update Customer Address</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Object",
              "optional": false,
              "field": "customerAddress",
              "description": "<p>Requires Monthly Income.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Customer Address',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/insertUpdateHomeLoanCoApplicantEmploymentDetail",
      "title": "Insert/Update Home Loan CoApplicant Employment Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Home_Loan_CoApplicant_Employment_Detail",
      "description": "<p>Insert/Update Home Loan CoApplicant Employment Detail</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanCoApplicantId",
              "description": "<p>Requires Customer Loan CoApplicant Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decimal",
              "optional": false,
              "field": "monthlyIncome",
              "description": "<p>Requires Monthly Income.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "addressTypeId",
              "description": "<p>Requires Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "label",
              "description": "<p>Requires address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine1",
              "description": "<p>Requires Address Line 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine2",
              "description": "<p>Requires Address Line 2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires Address Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "officePincode",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentNatureId",
              "description": "<p>Requires Employment Nature Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentServiceTypeId",
              "description": "<p>Requires Employment Service Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires Employment Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Home Loan CoApplicant Employment Detail',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/insertUpdateHomeLoanCurrentResidentDetail",
      "title": "Insert/Update Home Loan Current Resident Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Home_Loan_Current_Resident_Detail",
      "description": "<p>Insert/Update Home Loan Current Resident Detail</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "residentTypeId",
              "description": "<p>Requires Resident Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decimal",
              "optional": false,
              "field": "rentAmount",
              "description": "<p>Requires Rent Amount.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decimal",
              "optional": false,
              "field": "valueOfProperty",
              "description": "<p>Requires Value Of Property.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decimal",
              "optional": false,
              "field": "monthlyHouseHold",
              "description": "<p>Requires Monthly Household.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Home Loan Current Resident Detail',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/insertUpdateHomeLoanCustomerDetail",
      "title": "Insert/Update Home Loan Customer Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Home_Loan_Customer_Detail",
      "description": "<p>Insert/Update Home Loan Customer Detail</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Customer Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "birthdate",
              "description": "<p>Requires Customer Birth Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "maritalStatusId",
              "description": "<p>Requires Martial Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Home Loan Customer Detail',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/insertUpdateHomeLoanCustomerEmploymentDetail",
      "title": "Insert/Update Home Loan Customer Employment Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Home_Loan_Customer_Employment_Detail",
      "description": "<p>Insert/Update Home Loan Customer Employment Detail</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decimal",
              "optional": false,
              "field": "monthlyIncome",
              "description": "<p>Requires Monthly Income.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "addressTypeId",
              "description": "<p>Requires Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "label",
              "description": "<p>Requires address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine1",
              "description": "<p>Requires Address Line 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine2",
              "description": "<p>Requires Address Line 2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires Address Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "officePincode",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentNatureId",
              "description": "<p>Requires Employment Nature Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentServiceTypeId",
              "description": "<p>Requires Employment Service Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires Employment Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Home Loan Customer Employment Detail',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/insertUpdateCustomerLoanPropertyDetail",
      "title": "Insert/Update Home Loan Customer Property Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Home_Loan_Customer_Property_Detail",
      "description": "<p>Insert/Update Home Loan Customer Property Detail</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decimal",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires Customer Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "propertyTypeId",
              "description": "<p>Requires Customer Birth Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "propertyPurchaseValue",
              "description": "<p>Requires Martial Status Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "propertyCityId",
              "description": "<p>Requires Martial Status Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "propertyCity",
              "description": "<p>Requires Martial Status Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "propertyDistrict",
              "description": "<p>Requires Martial Status Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "propertyState",
              "description": "<p>Requires Martial Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Home Loan Customer Property Detail',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/insertUpdateCustomerLoanTransferPropertyDetail",
      "title": "Get Customer Home Loan Detail By Id",
      "version": "1.0.0",
      "name": "Insert_Update_Customer_Loan_Transfer_Property_Detail",
      "description": "<p>Insert Update Customer Loan Transfer Property Detail</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Update Customer Loan Transfer Property Detail',\n     recordList: Home Loan Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/homeLoans/uploadHomeLoanDocument",
      "title": "Upload Loan Document",
      "version": "1.0.0",
      "name": "Upload_Loan_Document",
      "description": "<p>Upload Loan Document</p>",
      "group": "Home_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "loanDocuments",
              "description": "<p>Requires Uploaded Documents Array {documentData,isPdf,documentName,loanDocumentId(Required Id Update),documentId,serviceTypeDocumentId}.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Upload Loan Document',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/homeLoans/insertUpdateHomeLoanCustomerEmploymentDetail",
      "title": "Insert/Update Home Loan Customer Employment Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Home_Loan_Customer_Employment_Detail",
      "description": "<p>Insert/Update Home Loan Customer Employment Detail</p>",
      "group": "Home_Loan_-_admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decimal",
              "optional": false,
              "field": "monthlyIncome",
              "description": "<p>Requires Monthly Income.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "addressTypeId",
              "description": "<p>Requires Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "label",
              "description": "<p>Requires address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine1",
              "description": "<p>Requires Address Line 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine2",
              "description": "<p>Requires Address Line 2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires Address Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "officePincode",
              "description": "<p>Optional Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentNatureId",
              "description": "<p>Requires Employment Nature Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentServiceTypeId",
              "description": "<p>Requires Employment Service Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires Employment Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanCoApplicantEmploymentDetails",
              "description": "<p>RequirescustomerLoanCoApplicantEmploymentDetails.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Home Loan Customer Employment Detail',\n     recordList: Home Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_admin"
    },
    {
      "type": "post",
      "url": "/api/partner/homeLoans/getIncompleteHomeLoanDetail",
      "title": "Get Incomplete Home Loan Detail",
      "version": "1.0.0",
      "name": "Get_Incomplete_Home_Loan_Detail",
      "description": "<p>Get Incomplete Home Loan Detail</p>",
      "group": "Home_Loan_-_partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires ServiceId Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Incomplete Home Loan Detail',\n     recordList: Update Home Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/homeLoanRoutes.ts",
      "groupTitle": "Home_Loan_-_partner"
    },
    {
      "type": "post",
      "url": "/api/admin/homeLoan/getHomeLoanById",
      "title": "Get Home Loan By Id",
      "version": "1.0.0",
      "name": "Get_Home_Loan_By_Id",
      "description": "<p>Get Home Loan By Id</p>",
      "group": "Home_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required customerLoan Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Home By Id',\n     recordList: Home Loan ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/homeLoanRoutes.ts",
      "groupTitle": "Home_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/homeLoan/getHomeLoan",
      "title": "Get Home Loans",
      "version": "1.0.0",
      "name": "Get_Home_Loans",
      "description": "<p>Get Home Loans</p>",
      "group": "Home_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Required Service Id</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Home Loans  ',\n     recordList: Home Loans  ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/homeLoanRoutes.ts",
      "groupTitle": "Home_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/industryTypes/activeInactiveIndustryType",
      "title": "Change Industry Type Status",
      "version": "1.0.0",
      "name": "Change_Industry_Type_Status",
      "description": "<p>Change Industry Type Status</p>",
      "group": "Industry_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Industry Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Industry Type Status',\n     recordList: Industry Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/industrytypeRoutes.ts",
      "groupTitle": "Industry_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/industryTypes/getIndustryTypes",
      "title": "Get Industry Types",
      "version": "1.0.0",
      "name": "Get_Industry_Type",
      "description": "<p>Get Industry Type</p>",
      "group": "Industry_Type_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Industry Type',\n     recordList: Industry Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/industrytypeRoutes.ts",
      "groupTitle": "Industry_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/industryTypes/updateIndustryType",
      "title": "update Industry Type",
      "version": "1.0.0",
      "name": "Update_Industry_Type",
      "description": "<p>Update Industry Type</p>",
      "group": "Industry_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Industry Type.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Industry Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "parentId",
              "description": "<p>Optional parentId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Industry Type',\n     recordList: Industry Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/industrytypeRoutes.ts",
      "groupTitle": "Industry_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/industryTypes/insertIndustryType",
      "title": "insert Industry Type",
      "version": "1.0.0",
      "name": "insert_Industry_Type",
      "description": "<p>insert Industry Type</p>",
      "group": "Industry_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Industry Type</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "parentId",
              "description": "<p>Optional parentId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Industry Type',\n     recordList: Industry Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/industrytypeRoutes.ts",
      "groupTitle": "Industry_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/creditCard/insertUpdateCreditCard",
      "title": "Insert/Update CreditCard",
      "version": "1.0.0",
      "name": "Insert/Update_CreditCard",
      "description": "<p>Insert/Update CreditCard</p>",
      "group": "Insert/Update_CreditCard_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert CreditCard',\n     recordList: CreditCard,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/creditCardRoutes.ts",
      "groupTitle": "Insert/Update_CreditCard_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/insertUpdateCustomer",
      "title": "Insert/Update Customer",
      "version": "1.0.0",
      "name": "Insert/Update_Customer",
      "description": "<p>Insert/Update Customer</p>",
      "group": "Insert/Update_Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Required ContactNo</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Customer',\n     recordList: Customer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Insert/Update_Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/customers/temp_InsertUpdateCustomer",
      "title": "Insert/Update Customer Temporary",
      "version": "1.0.0",
      "name": "Insert/Update_Customer_Temporary",
      "description": "<p>Insert/Update Customer Temporary</p>",
      "group": "Insert/Update_Customer_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Required Full Name of Customer</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Required ContactNo</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "panCardNo",
              "description": "<p>Required PAN Card No</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Required cityId</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "gender",
              "description": "<p>Required Gender</p>"
            },
            {
              "group": "Parameter",
              "type": "DateTime",
              "optional": false,
              "field": "birthDate",
              "description": "<p>Required birthDate</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "maritalStatusId",
              "description": "<p>Required MaritalStatusId</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Customer',\n     recordList: Customer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/customerRoutes.ts",
      "groupTitle": "Insert/Update_Customer_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/itr/activeInactiveItr",
      "title": "Change Itr Status",
      "version": "1.0.0",
      "name": "Change_Itr_Status",
      "description": "<p>Change Itr Status</p>",
      "group": "Itr_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Itr Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Itr',\n     recordList: Itr,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/itrRoutes.ts",
      "groupTitle": "Itr_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/itr/getItr",
      "title": "Get Itr",
      "version": "1.0.0",
      "name": "Get_Itr",
      "description": "<p>Get Itr</p>",
      "group": "Itr_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Itr',\n     recordList: Itr,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/itrRoutes.ts",
      "groupTitle": "Itr_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/itr/insertItr",
      "title": "insert Itr",
      "version": "1.0.0",
      "name": "insert/Update_Itr",
      "description": "<p>insert Itr</p>",
      "group": "Itr_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Itr.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Itr',\n     recordList: Itr,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/itrRoutes.ts",
      "groupTitle": "Itr_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/leads/assignToPartner",
      "title": "Assign To Partner",
      "version": "1.0.0",
      "name": "Assign_To_Partner_Leads",
      "description": "<p>Assign To Partner Leads</p>",
      "group": "Leads_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Assign To Partner Leads',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/leads/assignToPartner",
      "title": "Assign To Partner",
      "version": "1.0.0",
      "name": "Assign_To_Partner_Leads",
      "description": "<p>Assign To Partner Leads</p>",
      "group": "Leads_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Assign To Partner Leads',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/leads/getLeadListAssignByPartnerToNetwork",
      "title": "Assign To Partner",
      "version": "1.0.0",
      "name": "Assign_To_Partner_Leads",
      "description": "<p>Assign To Partner Leads</p>",
      "group": "Leads_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Assign To Partner Leads',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/leads/changeLeadStatus",
      "title": "Change Lead Statuses",
      "version": "1.0.0",
      "name": "Change_Lead_Statuses",
      "description": "<p>Change Leads Statuses</p>",
      "group": "Leads_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Leads Statuses',\n     recordList: Leads Statuses,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/leads/deletelead",
      "title": "Assign To Partner",
      "version": "1.0.0",
      "name": "Delete_Leads",
      "description": "<p>Partner Delete Leads</p>",
      "group": "Leads_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "leadId",
              "description": "<p>Requires leadId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Assign To Partner Leads',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/leads/getLeadstatuses",
      "title": "Get Lead Statuses",
      "version": "1.0.0",
      "name": "Get_Lead_Statuses",
      "description": "<p>Get Leads Statuses</p>",
      "group": "Leads_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Leads Statuses',\n     recordList: Leads Statuses,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/leads/getLeads",
      "title": "Get Leads",
      "version": "1.0.0",
      "name": "Get_Leads",
      "description": "<p>Get Leads</p>",
      "group": "Leads_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Leads',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/leads/getPartnerForAssignLead",
      "title": "Get Parnter",
      "version": "1.0.0",
      "name": "Get_Leads",
      "description": "<p>Get Leads</p>",
      "group": "Leads_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Leads',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/leads/convertLeadIntoCreditCard",
      "title": "Lead Convert Into Credit Card Request",
      "version": "1.0.0",
      "name": "Lead_Convert_Into_Credit_Card_Request",
      "description": "<p>Lead Convert Into Credit Card Request</p>",
      "group": "Leads_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Required id of Lead</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Required id of Services</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Convert Leads Into Loans',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/leads/convertLeadIntoLoan",
      "title": "Lead Convert Into Loan",
      "version": "1.0.0",
      "name": "Lead_Convert_Into_Loan",
      "description": "<p>Lead Convert Into Loan</p>",
      "group": "Leads_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "LeadId",
              "description": "<p>Required id of Lead</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "CustomerId",
              "description": "<p>Required id of customer</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Required id of EmploymentType</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Required id of Services</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "assignPartnerId",
              "description": "<p>Required id of partner</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Convert Leads Into Loans',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/leadRoutes.ts",
      "groupTitle": "Leads_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/leads/getLeadGeneratedByUserId",
      "title": "Getting Leads Generated By Users",
      "version": "1.0.0",
      "name": "Getting_Leads_Generated_By_Users",
      "description": "<p>Getting Leads Generated By Users</p>",
      "group": "Leads_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "userIds",
              "description": "<p>Requires Array Of UserId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Getting Leads Generated By Users',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/leadRoutes.ts",
      "groupTitle": "Leads_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/leads/getLeadGeneratedByNetworkAndTeamUsers",
      "title": "Getting Leads Generated By Users",
      "version": "1.0.0",
      "name": "Getting_Leads_Generated_By_Users",
      "description": "<p>Getting Leads Generated By Users</p>",
      "group": "Leads_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Array Of UserId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Getting Leads Generated By Users',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/leadRoutes.ts",
      "groupTitle": "Leads_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/leads/getLeadAssignByPartnerId",
      "title": "Getting Leads Generated By Users",
      "version": "1.0.0",
      "name": "Getting_Leads_Generated_By_Users",
      "description": "<p>Getting Leads Generated By Users</p>",
      "group": "Leads_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Array Of UserId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Getting Leads Generated By Users',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/leadRoutes.ts",
      "groupTitle": "Leads_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/leads/getAssignedLeadListOfNetwork",
      "title": "Getting Leads Generated By Users",
      "version": "1.0.0",
      "name": "Getting_Leads_Generated_By_Users",
      "description": "<p>Getting Leads Generated By Users</p>",
      "group": "Leads_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Array Of UserId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Getting Leads Generated By Users',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/leadRoutes.ts",
      "groupTitle": "Leads_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/leads/insertUpdateLeads",
      "title": "Insert/Update Leads",
      "version": "1.0.0",
      "name": "Insert/Update_Leads",
      "description": "<p>Insert/Update Leads</p>",
      "group": "Leads_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "leadId",
              "description": "<p>Optional Lead Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires Contact No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "customerFullName",
              "description": "<p>Requires Customer Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "email",
              "description": "<p>Requires Customer Email Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id. Ex 1 For Personal Loan</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires Loan Amount.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires Employment Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires cityId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "aadhaarCardNo",
              "description": "<p>Requires Aadhaar Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "panCardNo",
              "description": "<p>Requires PAN Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerAddressId",
              "description": "<p>Optional customer Address Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional Address Line 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional Address Line 2.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "city",
              "description": "<p>Optional City Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "district",
              "description": "<p>Optional District Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "state",
              "description": "<p>Optional State Name.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Leads',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/leadRoutes.ts",
      "groupTitle": "Leads_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/web/leads/getLeadsByContactNoAndServiceId",
      "title": "Get Leads By ContactNo And ServiceId",
      "version": "1.0.0",
      "name": "Get_Leads_By_ContactNo_And_ServiceId",
      "description": "<p>Get Leads By ContactNo And ServiceId</p>",
      "group": "Leads_-_WebSite",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires contactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires service Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Leads By ContactNo And ServiceId',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/leadRoutes.ts",
      "groupTitle": "Leads_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/web/leads/insertLeads",
      "title": "Insert Lead",
      "version": "1.0.0",
      "name": "Insert_Lead",
      "description": "<p>Insert Lead</p>",
      "group": "Leads_-_WebSite",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decinal",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires Loan Amount.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "customerFullName",
              "description": "<p>Requires Customer Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires service City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "email",
              "description": "<p>Requires Email Of Customer.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "userId",
              "description": "<p>Optional User Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressTypeId",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "panCardNo",
              "description": "<p>Optional PAN Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "aadhaarCardNo",
              "description": "<p>Optional Aadhar Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "primaryBankId",
              "description": "<p>Optional Bank Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "employmentTypeId",
              "description": "<p>Optional Employment Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "loanPurpose",
              "description": "<p>Optional Loan Purpose.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "degreeId",
              "description": "<p>Optional Degree Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "courseId",
              "description": "<p>Optional Course Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "studiedCountryId",
              "description": "<p>Optional Studied Country Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "countryCode",
              "description": "<p>Optional Country Code.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Lead',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/leadRoutes.ts",
      "groupTitle": "Leads_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/web/leads/updateLeads",
      "title": "Update Lead",
      "version": "1.0.0",
      "name": "Update_Lead",
      "description": "<p>Update Lead</p>",
      "group": "Leads_-_WebSite",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Lead Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Decinal",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires Loan Amount.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "customerFullName",
              "description": "<p>Requires Customer Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires service City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "email",
              "description": "<p>Requires Email Of Customer.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "userId",
              "description": "<p>Optional User Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "panCardNo",
              "description": "<p>Optional PAN Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "aadhaarCardNo",
              "description": "<p>Optional Aadhar Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "primaryBankId",
              "description": "<p>Optional Bank Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "employmentTypeId",
              "description": "<p>Optional Employment Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "loanPurpose",
              "description": "<p>Optional Loan Purpose.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "degreeId",
              "description": "<p>Optional Degree Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "courseId",
              "description": "<p>Optional Course Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "studiedCountryId",
              "description": "<p>Optional Studied Country Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "experiance",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "annualIncome",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "monthlyIncome",
              "description": "<p>Optional Address Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Lead',\n     recordList: Leads,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/leadRoutes.ts",
      "groupTitle": "Leads_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/admin/loanAgainstCollteral/activeInactiveLoanAgainstCollteral",
      "title": "Change LoanAgainstColletral Status",
      "version": "1.0.0",
      "name": "Change_LoanAgainstColletral",
      "description": "<p>Change LoanAgainstColletral</p>",
      "group": "LoanAgainstColletral_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires LoanAgainstColletral Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change LoanAgainstColletral Status',\n     recordList: LoanAgainstColletral Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/loanAgainstCollteralRoutes.ts",
      "groupTitle": "LoanAgainstColletral_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/loanAgainstCollteral/getLoanAginstCollteral",
      "title": "Get LoanAgainstColletral",
      "version": "1.0.0",
      "name": "Get_LoanAgainstColletral",
      "description": "<p>Get LoanAgainstColletral</p>",
      "group": "LoanAgainstColletral_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get LoanAgainstColletral',\n     recordList: LoanAgainstColletral,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/loanAgainstCollteralRoutes.ts",
      "groupTitle": "LoanAgainstColletral_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/loanAgainstCollteral/updateLoanAgainstCollteral",
      "title": "Update LoanAgainstColletral",
      "version": "1.0.0",
      "name": "Update_LoanAgainstColletral",
      "description": "<p>Update LoanAgainstColletral</p>",
      "group": "LoanAgainstColletral_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "id",
              "description": "<p>Requires id of LoanAgainstColletral.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of LoanAgainstColletral.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update LoanAgainstColletral',\n     recordList: LoanAgainstColletral,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/loanAgainstCollteralRoutes.ts",
      "groupTitle": "LoanAgainstColletral_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/loanAgainstCollteral/insertLoanAgainstCollteral",
      "title": "insert LoanAgainstColletral",
      "version": "1.0.0",
      "name": "insert/Update_LoanAgainstColletral",
      "description": "<p>insert/Update LoanAgainstColletral</p>",
      "group": "LoanAgainstColletral_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of LoanAgainstColletral.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert LoanAgainstColletral',\n     recordList: LoanAgainstColletral,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/loanAgainstCollteralRoutes.ts",
      "groupTitle": "LoanAgainstColletral_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/partner/loans/deleteLoanById",
      "title": "Delete Customer Loan",
      "version": "1.0.0",
      "name": "Delete_Customer_Loan",
      "description": "<p>Delete Customer Loan</p>",
      "group": "Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Delete Customer Loan',\n     recordList: Delete Customer Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/loanRoutes.ts",
      "groupTitle": "Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/loans/getCustomerLoansByStatusId",
      "title": "Get Customer Loan By Status",
      "version": "1.0.0",
      "name": "Get_Customer_Loan_By_Status",
      "description": "<p>Get Customer Loan By Status</p>",
      "group": "Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "statusId",
              "description": "<p>Requires Loan Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Customer Loan By Status Detail',\n     recordList: Update Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/loanRoutes.ts",
      "groupTitle": "Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/loans/getCustomerLoansByStatusIdV2",
      "title": "Get Customer Loan By Status",
      "version": "1.0.0",
      "name": "Get_Customer_Loan_By_Status",
      "description": "<p>Get Customer Loan By Status</p>",
      "group": "Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "statusId",
              "description": "<p>Requires Loan Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Customer Loan By Status Detail',\n     recordList: Update Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/loanRoutes.ts",
      "groupTitle": "Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/partner/loans/getCustomerLoansByStatusId",
      "title": "Get Customer Loan By Status",
      "version": "1.0.0",
      "name": "Get_Customer_Loan_By_Status",
      "description": "<p>Get Customer Loan By Status</p>",
      "group": "Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "statusId",
              "description": "<p>Requires Loan Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Customer Loan By Status Detail',\n     recordList: Update Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/loanRoutes.ts",
      "groupTitle": "Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/partner/loans/getCustomerLoansByStatusIdV2",
      "title": "Get Customer Loan By Status",
      "version": "1.0.0",
      "name": "Get_Customer_Loan_By_Status",
      "description": "<p>Get Customer Loan By Status</p>",
      "group": "Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "statusId",
              "description": "<p>Requires Loan Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Customer Loan By Status Detail',\n     recordList: Update Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/loanRoutes.ts",
      "groupTitle": "Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/loans/getLoanCompareData",
      "title": "Get Loan Compare Data By serviceId Id",
      "version": "1.0.0",
      "name": "Get_Loan_Compare_Data_By_serviceId_Id",
      "description": "<p>Get Loan Compare Data By serviceId Id</p>",
      "group": "Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires loanAmount.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "tenure",
              "description": "<p>Requires tenure.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Loan Compare Data By serviceId Id',\n     recordList: Update Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/loanRoutes.ts",
      "groupTitle": "Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/loanStatus/activeInactiveLoanStatus",
      "title": "Change Loan Status",
      "version": "1.0.0",
      "name": "Change_Loan_Status",
      "description": "<p>Change Loan Status</p>",
      "group": "Loan_Status_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Loan Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Loan Status',\n     recordList: Loan Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/loanStatusRoutes.ts",
      "groupTitle": "Loan_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/loanStatus/changeLoanStatus",
      "title": "Change Loan Status",
      "version": "1.0.0",
      "name": "Change_Loan_Status",
      "description": "<p>Change Loan Status</p>",
      "group": "Loan_Status_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Loan Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Loan Status',\n     recordList: Loan Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/loanStatusRoutes.ts",
      "groupTitle": "Loan_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/loanStatus/getLoanStatus",
      "title": "Get Loan Status",
      "version": "1.0.0",
      "name": "Get_Loan_Status",
      "description": "<p>Get Loan Status</p>",
      "group": "Loan_Status_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Loan Status',\n     recordList: Loan Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/loanStatusRoutes.ts",
      "groupTitle": "Loan_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/loanStatus/updateLoanStatus",
      "title": "update Loan Status",
      "version": "1.0.0",
      "name": "Update_Loan_Status",
      "description": "<p>Update Loan Status</p>",
      "group": "Loan_Status_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Loan Status Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "status",
              "description": "<p>Required status of Loan Status</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "isDataEditable",
              "description": "<p>Required isDataEditable of LoanStatus.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Loan Status',\n     recordList: Loan Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/loanStatusRoutes.ts",
      "groupTitle": "Loan_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/loanStatus/insertLoanStatus",
      "title": "insert Loan Status",
      "version": "1.0.0",
      "name": "insert_Loan_Status",
      "description": "<p>insert Loan Status</p>",
      "group": "Loan_Status_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "status",
              "description": "<p>Required status of Loan Status</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "isDataEditable",
              "description": "<p>Required isDataEditable of LoanStatus.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Loan Status',\n     recordList: Loan Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/loanStatusRoutes.ts",
      "groupTitle": "Loan_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/loanStatus/getLoanStatus",
      "title": "Get Loan Status",
      "version": "1.0.0",
      "name": "Get_Loan_Status",
      "description": "<p>Get Loan Status</p>",
      "group": "Loan_Status_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Loan Status',\n     recordList: Loan Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/loanStatusRoutes.ts",
      "groupTitle": "Loan_Status_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/maritalStatuses/activeInactiveMaritalStatus",
      "title": "Change Marital Status",
      "version": "1.0.0",
      "name": "Change_Marital_Status",
      "description": "<p>Change Marital Status</p>",
      "group": "Marital_Status_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Marital Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Marital Status',\n     recordList: Marital Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/maritalStatusRoutes.ts",
      "groupTitle": "Marital_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/maritalStatuses/getMaritalStatuses",
      "title": "Get Marital Status",
      "version": "1.0.0",
      "name": "Get_Marital_Status",
      "description": "<p>Get Marital Statusr</p>",
      "group": "Marital_Status_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Marital Status',\n     recordList: Marital Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/maritalStatusRoutes.ts",
      "groupTitle": "Marital_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/maritalStatuses/updateUpdateMaritalStatus",
      "title": "update Marital Statuses",
      "version": "1.0.0",
      "name": "Update_Marital_Statuses",
      "description": "<p>Update Marital Statuses</p>",
      "group": "Marital_Status_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "status",
              "description": "<p>Requires status of marital Status.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Marital Status',\n     recordList: Marital Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/maritalStatusRoutes.ts",
      "groupTitle": "Marital_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/residentTypes/updateResidentType",
      "title": "update Resident Type",
      "version": "1.0.0",
      "name": "insert/Update_Marital_Statuses",
      "description": "<p>insert/Update Marital Statuses</p>",
      "group": "Marital_Status_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "status",
              "description": "<p>Requires status of marital Status.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Resident Type',\n     recordList: Resident Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/residenceTypeRoutes.ts",
      "groupTitle": "Marital_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/maritalStatuses/insertUpdateMaritalStatuses",
      "title": "insert Marital Statuses",
      "version": "1.0.0",
      "name": "insert_Marital_Statuses",
      "description": "<p>insert Marital Statuses</p>",
      "group": "Marital_Status_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "status",
              "description": "<p>Requires status of marital Status.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Marital Status',\n     recordList: Marital Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/maritalStatusRoutes.ts",
      "groupTitle": "Marital_Status_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/maritalStatuses/getMaritalStatus",
      "title": "Get Marital Status",
      "version": "1.0.0",
      "name": "Get_Marital_Status",
      "description": "<p>Get Marital Status</p>",
      "group": "Marital_Status_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Marital Status',\n     recordList: Marital Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/maritalStatusesRoutes.ts",
      "groupTitle": "Marital_Status_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/serviceMasterData/getMasterDataByServiceId",
      "title": "Get Master Data By ServiceId",
      "version": "1.0.0",
      "name": "Get_Master_Data_By_ServiceId",
      "description": "<p>Get Master Data By ServiceId</p>",
      "group": "Master_Data_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Master Data By ServiceId',\n     recordList: Master Data,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/serviceMasterDataRoutes.ts",
      "groupTitle": "Master_Data_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/serviceMasterData/getCompanyCategories",
      "title": "Get Master Data By ServiceId",
      "version": "1.0.0",
      "name": "Get_Master_Data_By_ServiceId",
      "description": "<p>Get Master Data By ServiceId</p>",
      "group": "Master_Data_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Master Data By ServiceId',\n     recordList: Master Data,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/serviceMasterDataRoutes.ts",
      "groupTitle": "Master_Data_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/newslettersubscription/getNewsLetterSubscription",
      "title": "Get News Letter Subscription",
      "version": "1.0.0",
      "name": "Get_News_Letter_Subscription",
      "description": "<p>Get News LetterS ubscription</p>",
      "group": "News_Letter_Subscription_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Itr',\n     recordList: Itr,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/newslettersubscriptionRoutes.ts",
      "groupTitle": "News_Letter_Subscription_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/orders/changeOrderStatus",
      "title": "Change Order Status",
      "version": "1.0.0",
      "name": "Change_Order_Status",
      "description": "<p>Change Order Status</p>",
      "group": "Orders_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "orderId",
              "description": "<p>Required Order Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "statusId",
              "description": "<p>Required Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Order Status',\n     recordList: Orders,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/ordersRoutes.ts",
      "groupTitle": "Orders_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/orders/getOrderStatus",
      "title": "Get Order Status",
      "version": "1.0.0",
      "name": "Get_Order_Status",
      "description": "<p>Get Order Status</p>",
      "group": "Orders_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "orderId",
              "description": "<p>Required Order Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "statusId",
              "description": "<p>Required Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Order Status',\n     recordList: Orders,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/ordersRoutes.ts",
      "groupTitle": "Orders_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/orders/getOrders",
      "title": "Get Orders",
      "version": "1.0.0",
      "name": "Get_Orders",
      "description": "<p>Get Orders</p>",
      "group": "Orders_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "searchString",
              "description": "<p>Optional Search String.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fromDate",
              "description": "<p>Optional From Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "toDate",
              "description": "<p>Optional To Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": true,
              "field": "statusIds",
              "description": "<p>Optional Array of Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Orders',\n     recordList: Orders,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/ordersRoutes.ts",
      "groupTitle": "Orders_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/orders/getOrders",
      "title": "Get Orders",
      "version": "1.0.0",
      "name": "Get_Orders",
      "description": "<p>Get Orders</p>",
      "group": "Orders_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fromDate",
              "description": "<p>Optional From Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "toDate",
              "description": "<p>Optional To Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": true,
              "field": "statusIds",
              "description": "<p>Optional Array of Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Orders',\n     recordList: Orders,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/ordersRoutes.ts",
      "groupTitle": "Orders_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/orders/insertUpdateOrders",
      "title": "Insert Update Orders",
      "version": "1.0.0",
      "name": "Insert_Update_Orders",
      "description": "<p>Insert Update Orders</p>",
      "group": "Orders_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "id",
              "description": "<p>Optional Order Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "productId",
              "description": "<p>Required Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "quantity",
              "description": "<p>Required Fetch Records.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "unitCoin",
              "description": "<p>Required Product Search String.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "addressTypeId",
              "description": "<p>Required address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "label",
              "description": "<p>Required address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine1",
              "description": "<p>Required address line 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine2",
              "description": "<p>Required address line 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Required address pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Required cityId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "city",
              "description": "<p>Required city.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "district",
              "description": "<p>Required district.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "state",
              "description": "<p>Required state.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Update Orders',\n     recordList: Orders,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/ordersRoutes.ts",
      "groupTitle": "Orders_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/otherLoan/getOtherLoan",
      "title": "Get Other Loan",
      "version": "1.0.0",
      "name": "Get_Other_Loan",
      "description": "<p>Get Other Loan</p>",
      "group": "Other_Loan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Other Loan ',\n     recordList: Other Loan ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/otherLoanRoutes.ts",
      "groupTitle": "Other_Loan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/otherLoan/insertUpdateOtherLoanDetail",
      "title": "insert Other Loan",
      "version": "1.0.0",
      "name": "insert/Update_Other_Loan",
      "description": "<p>insert Other Loan</p>",
      "group": "Other_Loan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "rewardTypeId",
              "description": "<p>Requires Reward Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Reward Coin.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Other Loan',\n     recordList: Other Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/otherLoanRoutes.ts",
      "groupTitle": "Other_Loan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/checkContactNoExistForCreditCard",
      "title": "Check contact number exist for credit card",
      "version": "1.0.0",
      "name": "Check_contact_number_exist_for_credit_card",
      "description": "<p>Check contact number exist for credit card</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/deletePartnerByPartnerId",
      "title": "Delete Partner By Partner Id",
      "version": "1.0.0",
      "name": "Delete_Partner_By_Partner_Id",
      "description": "<p>Delete Partner By Partner Id</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/getBankDetailByPartnerId",
      "title": "Get Partner Bank Detail",
      "version": "1.0.0",
      "name": "Get_Partner_Bank_Detail",
      "description": "<p>Get Partner Bank Detail</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/checkContactNoExistWithServiceId",
      "title": "Get Partner Bank Detail",
      "version": "1.0.0",
      "name": "Get_Partner_Bank_Detail",
      "description": "<p>Get Partner Bank Detail</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/checkContactNoExistWithServiceIdFroOtherLoansAndServices",
      "title": "Get Partner Bank Detail",
      "version": "1.0.0",
      "name": "Get_Partner_Bank_Detail",
      "description": "<p>Get Partner Bank Detail</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/getCommisionListByPartnerId",
      "title": "Get Partner Commission List",
      "version": "1.0.0",
      "name": "Get_Partner_Commission_List",
      "description": "<p>Get Partner Commission List</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/getPartnerDetailByPartnerId",
      "title": "Get Partner Detail By partnerId",
      "version": "1.0.0",
      "name": "Get_Partner_Detail_By_partnerId",
      "description": "<p>Get Partner Detail By partnerId</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/getNetworkandTeamPartnerListByRoleId",
      "title": "Get Partner List",
      "version": "1.0.0",
      "name": "Get_Partner_List",
      "description": "<p>Get Partner List</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "roleIds",
              "description": "<p>Requires RoleIds.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional startIndex.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional fetchRecords.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/getNetworkandTeamPartnerListByParentPartnerId",
      "title": "Get Partner List",
      "version": "1.0.0",
      "name": "Get_Partner_List",
      "description": "<p>Get Partner List</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional startIndex.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional fetchRecords.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/getNetworkandTeamPartnerHierarchyListByRoleId",
      "title": "Get Partner List",
      "version": "1.0.0",
      "name": "Get_Partner_List",
      "description": "<p>Get Partner List</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional startIndex.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional fetchRecords.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/getPartnerGroupCustomers",
      "title": "Get Partners Customer List",
      "version": "1.0.0",
      "name": "Get_Partners_Customer_List",
      "description": "<p>Get Partners Customer List</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional startIndex.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional fetchRecords.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/insertUpdatePartnerBankDetail",
      "title": "Insert/Update Partner Bank Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Partner_Bank_Detail",
      "description": "<p>Insert/Update Partner Bank Detail</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankId",
              "description": "<p>Requires Bank Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "accountHolderName",
              "description": "<p>Requires Account HolderName.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "accountNo",
              "description": "<p>Requires Account No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "ifscCode",
              "description": "<p>Requires IFSC Code.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/insertPartner",
      "title": "Insert Partner",
      "version": "1.0.0",
      "name": "Insert_Partner",
      "description": "<p>Insert Partner</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "roleName",
              "description": "<p>Requires Role Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires service City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "email",
              "description": "<p>Optional Email Of Customer.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "countryCode",
              "description": "<p>Optional Country Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "aadhaarCardNo",
              "description": "<p>Optional Aadhar Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "panCardNo",
              "description": "<p>Optional PAN Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "companyName",
              "description": "<p>Optional Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "professionTypeId",
              "description": "<p>Optional Profession Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "workExperience",
              "description": "<p>Optional Work Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": true,
              "field": "haveOffice",
              "description": "<p>Optional haveOffice.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gender",
              "description": "<p>Optional Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessName",
              "description": "<p>Optional Business Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessAddress",
              "description": "<p>Optional Business Address.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gstNo",
              "description": "<p>Optional gstNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "referralCode",
              "description": "<p>Optional Referral Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "commitment",
              "description": "<p>Optional Commitment.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "dsaCode",
              "description": "<p>Optional dsaCode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressTypeId",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional Address Line1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional Address Line2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "pincode",
              "description": "<p>Optional Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "designationId",
              "description": "<p>Optional Designation Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "educationTypeId",
              "description": "<p>Optional Education Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "instituteName",
              "description": "<p>Optional Institute Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "passingYear",
              "description": "<p>Optional Passing Year.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "resume",
              "description": "<p>Optional Resume Base 64.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "contentType",
              "description": "<p>Optional File Type.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "otherDetail",
              "description": "<p>Optional OtherDetail.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": true,
              "field": "documents",
              "description": "<p>Optional Array OF DSA Signup Uploaded Documetns with documentId,fileData(base64),fileName,contentType.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/updatePartner",
      "title": "Update Partner",
      "version": "1.0.0",
      "name": "Update_Partner",
      "description": "<p>Update Partner</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Requires Partner User Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "parentParnerId",
              "description": "<p>Requires Parent Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires service City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerAddressId",
              "description": "<p>Requires Partner Address Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerEducationId",
              "description": "<p>Requires Partner Education Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "email",
              "description": "<p>Optional Email Of Customer.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "countryCode",
              "description": "<p>Optional Country Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "aadhaarCardNo",
              "description": "<p>Optional Aadhar Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "panCardNo",
              "description": "<p>Optional PAN Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "companyName",
              "description": "<p>Optional Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "professionTypeId",
              "description": "<p>Optional Profession Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "workExperience",
              "description": "<p>Optional Work Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": true,
              "field": "haveOffice",
              "description": "<p>Optional haveOffice.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gender",
              "description": "<p>Optional Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessName",
              "description": "<p>Optional Business Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessAddress",
              "description": "<p>Optional Business Address.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gstNo",
              "description": "<p>Optional gstNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "referralCode",
              "description": "<p>Optional Referral Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "commitment",
              "description": "<p>Optional Commitment.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "dsaCode",
              "description": "<p>Optional dsaCode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressTypeId",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional Address Line1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional Address Line2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "pincode",
              "description": "<p>Optional Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "designationId",
              "description": "<p>Optional Designation Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "educationTypeId",
              "description": "<p>Optional Education Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "instituteName",
              "description": "<p>Optional Institute Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "passingYear",
              "description": "<p>Optional Passing Year.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "resume",
              "description": "<p>Optional Resume Base 64.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "contentType",
              "description": "<p>Optional File Type.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "otherDetail",
              "description": "<p>Optional OtherDetail.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": true,
              "field": "documents",
              "description": "<p>Optional Array OF DSA Signup Uploaded Documetns with documentId,fileData(base64),fileName,contentType.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/updatePartnerProfile",
      "title": "Update Partner Profile",
      "version": "1.0.0",
      "name": "Update_Partner_Profile",
      "description": "<p>Update Partner Profile</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Requires User Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Partner Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "panCardNo",
              "description": "<p>Requires Pan Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "aadhaarCardNo",
              "description": "<p>Requires AadharCard No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires Contact No.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "companyName",
              "description": "<p>Optional Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "professionTypeId",
              "description": "<p>Optional Profession Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "workExperience",
              "description": "<p>Optional Work Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": true,
              "field": "haveOffice",
              "description": "<p>Optional haveOffice.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gender",
              "description": "<p>Optional Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessName",
              "description": "<p>Optional Business Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessAddress",
              "description": "<p>Optional Business Address.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gstNo",
              "description": "<p>Optional gstNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "commitment",
              "description": "<p>Optional Commitment.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressTypeId",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional Address Line1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional Address Line2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "pincode",
              "description": "<p>Optional Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "profilePicUrl",
              "description": "<p>Optional Profile Pic.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partners/verifyPartner",
      "title": "Verifying Partner",
      "version": "1.0.0",
      "name": "Verifying_Partner",
      "description": "<p>Verifying Partner</p>",
      "group": "Partner_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Requires User Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnerRoutes.ts",
      "groupTitle": "Partner_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/admin/partners/getPartnerDetailByPartnerId",
      "title": "Get Partner Detail By partnerId",
      "version": "1.0.0",
      "name": "Get_Partner_Detail_By_partnerId",
      "description": "<p>Get Partner Detail By partnerId</p>",
      "group": "Partner_-_admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/partnerRoutes.ts",
      "groupTitle": "Partner_-_admin"
    },
    {
      "type": "post",
      "url": "/api/admin/partners/insertPartner",
      "title": "Insert Partner",
      "version": "1.0.0",
      "name": "Insert_Partner",
      "description": "<p>Insert Partner</p>",
      "group": "Partner_-_admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "roleName",
              "description": "<p>Requires Role Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires service City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "email",
              "description": "<p>Optional Email Of Customer.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "countryCode",
              "description": "<p>Optional Country Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "aadhaarCardNo",
              "description": "<p>Optional Aadhar Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "panCardNo",
              "description": "<p>Optional PAN Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "companyName",
              "description": "<p>Optional Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "professionTypeId",
              "description": "<p>Optional Profession Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "workExperience",
              "description": "<p>Optional Work Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": true,
              "field": "haveOffice",
              "description": "<p>Optional haveOffice.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gender",
              "description": "<p>Optional Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessName",
              "description": "<p>Optional Business Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessAddress",
              "description": "<p>Optional Business Address.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gstNo",
              "description": "<p>Optional gstNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "referralCode",
              "description": "<p>Optional Referral Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "commitment",
              "description": "<p>Optional Commitment.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "dsaCode",
              "description": "<p>Optional dsaCode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressTypeId",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional Address Line1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional Address Line2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "pincode",
              "description": "<p>Optional Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "designationId",
              "description": "<p>Optional Designation Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "educationTypeId",
              "description": "<p>Optional Education Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "instituteName",
              "description": "<p>Optional Institute Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "passingYear",
              "description": "<p>Optional Passing Year.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "resume",
              "description": "<p>Optional Resume Base 64.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "contentType",
              "description": "<p>Optional File Type.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "otherDetail",
              "description": "<p>Optional OtherDetail.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "accountHolderName",
              "description": "<p>Optional AccountHolderName.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "bankId",
              "description": "<p>Optional BankId.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "accountNumber",
              "description": "<p>Optional AccountNumber.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "ifscCode",
              "description": "<p>Optional ifscCode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": true,
              "field": "documents",
              "description": "<p>Optional Array OF DSA Signup Uploaded Documetns with documentId,fileData(base64),fileName,contentType.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/partnerRoutes.ts",
      "groupTitle": "Partner_-_admin"
    },
    {
      "type": "post",
      "url": "/api/admin/partners/updatePartner",
      "title": "Update Partner",
      "version": "1.0.0",
      "name": "Update_Partner",
      "description": "<p>Update Partner</p>",
      "group": "Partner_-_admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Requires Partner User Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "parentParnerId",
              "description": "<p>Requires Parent Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires service City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerAddressId",
              "description": "<p>Requires Partner Address Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerEducationId",
              "description": "<p>Requires Partner Education Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "email",
              "description": "<p>Optional Email Of Customer.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "countryCode",
              "description": "<p>Optional Country Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "aadhaarCardNo",
              "description": "<p>Optional Aadhar Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "panCardNo",
              "description": "<p>Optional PAN Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "companyName",
              "description": "<p>Optional Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "professionTypeId",
              "description": "<p>Optional Profession Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "workExperience",
              "description": "<p>Optional Work Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": true,
              "field": "haveOffice",
              "description": "<p>Optional haveOffice.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gender",
              "description": "<p>Optional Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessName",
              "description": "<p>Optional Business Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessAddress",
              "description": "<p>Optional Business Address.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gstNo",
              "description": "<p>Optional gstNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "referralCode",
              "description": "<p>Optional Referral Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "commitment",
              "description": "<p>Optional Commitment.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "dsaCode",
              "description": "<p>Optional dsaCode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressTypeId",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional Address Line1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional Address Line2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "pincode",
              "description": "<p>Optional Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "designationId",
              "description": "<p>Optional Designation Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "educationTypeId",
              "description": "<p>Optional Education Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "instituteName",
              "description": "<p>Optional Institute Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "passingYear",
              "description": "<p>Optional Passing Year.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "resume",
              "description": "<p>Optional Resume Base 64.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "contentType",
              "description": "<p>Optional File Type.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "otherDetail",
              "description": "<p>Optional OtherDetail.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "accountHolderName",
              "description": "<p>Optional AccountHolderName.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "bankId",
              "description": "<p>Optional BankId.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "accountNumber",
              "description": "<p>Optional AccountNumber.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "ifscCode",
              "description": "<p>Optional ifscCode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": true,
              "field": "documents",
              "description": "<p>Optional Array OF DSA Signup Uploaded Documetns with documentId,fileData(base64),fileName,contentType.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/partnerRoutes.ts",
      "groupTitle": "Partner_-_admin"
    },
    {
      "type": "post",
      "url": "/api/partner/partnerCommissions/getPartnerCommission",
      "title": "Getting Partner Commission",
      "version": "1.0.0",
      "name": "Getting_Partner_Commission",
      "description": "<p>Getting Partner Commission</p>",
      "group": "Partner_Commission_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "partnerIds",
              "description": "<p>Requires Array of PartnerId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Getting Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnercommissionRoutes.ts",
      "groupTitle": "Partner_Commission_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partnerCommissions/getNetworkAndTeamCommissionByDsa",
      "title": "Getting Partner Commission",
      "version": "1.0.0",
      "name": "Getting_Partner_Commission",
      "description": "<p>Getting Partner Commission</p>",
      "group": "Partner_Commission_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "partnerIds",
              "description": "<p>Requires Array of PartnerId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Getting Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnercommissionRoutes.ts",
      "groupTitle": "Partner_Commission_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/partnerCommissions/insertUpdatePartnerCommision",
      "title": "Insert/Update Partner Commission",
      "version": "1.0.0",
      "name": "Insert/Update_Partner_Commission",
      "description": "<p>Insert/Update Partner Commission</p>",
      "group": "Partner_Commission_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankId",
              "description": "<p>Requires Bank Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "commissionTypeId",
              "description": "<p>Requires Commission Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "commission",
              "description": "<p>Requires Commission in Percentage.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "id",
              "description": "<p>Optional partner Commission Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Partner Commission',\n     recordList: Partner Commission,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/partnercommissionRoutes.ts",
      "groupTitle": "Partner_Commission_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/web/dsaSignUps/dsaSignup",
      "title": "Partner SignUp",
      "version": "1.0.0",
      "name": "Partner_SignUp",
      "description": "<p>Partner SignUp</p>",
      "group": "Partner_SignUp_-_WebSite",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "roleName",
              "description": "<p>Requires Role Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires service City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "email",
              "description": "<p>Optional Email Of Customer.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "countryCode",
              "description": "<p>Optional Country Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "commitment",
              "description": "<p>Optional Commitment.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "professionTypeId",
              "description": "<p>Optional Profession Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "workExperience",
              "description": "<p>Optional Work Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": true,
              "field": "haveOffice",
              "description": "<p>Optional haveOffice.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gender",
              "description": "<p>Optional Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "companyTypeId",
              "description": "<p>Optional Company Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gstNo",
              "description": "<p>Optional gstNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "udhyamAadharNo",
              "description": "<p>Optional Udhyam Aadhar No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "referralCode",
              "description": "<p>Optional Referral Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "companyRegNo",
              "description": "<p>Optional Company Reg No.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressTypeId",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional Address Line1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional Address Line2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "pincode",
              "description": "<p>Optional Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "dsaCode",
              "description": "<p>Optional dsaCode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": true,
              "field": "documents",
              "description": "<p>Optional Array OF DSA Signup Uploaded Documetns with documentId,fileData(base64),fileName,contentType.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Partner SignUp',\n     recordList: Partner SignUp,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/dsasignupRoutes.ts",
      "groupTitle": "Partner_SignUp_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/web/dsaSignUps/referPartner",
      "title": "Partner SignUp",
      "version": "1.0.0",
      "name": "Partner_SignUp",
      "description": "<p>Partner SignUp</p>",
      "group": "Partner_SignUp_-_WebSite",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "roleName",
              "description": "<p>Requires Role Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires service City Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Partner SignUp',\n     recordList: Partner SignUp,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/dsasignupRoutes.ts",
      "groupTitle": "Partner_SignUp_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/admin/payout/getPartnerPayout",
      "title": "Get Partner Payout",
      "version": "1.0.0",
      "name": "Get_Partner_Payout",
      "description": "<p>Get Partner Payout</p>",
      "group": "Payout_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Partner Payout',\n     recordList: Payout,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/payoutRoutes.ts",
      "groupTitle": "Payout_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/payout/payoutRelease",
      "title": "Insert Payout Release",
      "version": "1.0.0",
      "name": "Insert_Payout_Release",
      "description": "<p>Insert Payout Release</p>",
      "group": "Payout_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Payout Release',\n     recordList: Payout,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/payoutRoutes.ts",
      "groupTitle": "Payout_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/permissionGroup/getPermissionGroup",
      "title": "Get Permission Group",
      "version": "1.0.0",
      "name": "Get_Permission_Group",
      "description": "<p>Get Permission Group</p>",
      "group": "PermissionGroup_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Fetch Records.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Permission Group',\n     recordList: PermissionGroup,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/permissionGroupRoutes.ts",
      "groupTitle": "PermissionGroup_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/permissionGroup/insertPermissionGroup",
      "title": "Insert Permission Group",
      "version": "1.0.0",
      "name": "Insert_Permission_Group",
      "description": "<p>Insert Permission Group</p>",
      "group": "PermissionGroup_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Required Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "pagePermissions",
              "description": "<p>Required Page Permissions Array.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Permission Group',\n     recordList: PermissionGroup,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/permissionGroupRoutes.ts",
      "groupTitle": "PermissionGroup_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/permissionGroup/updatePermissionGroup",
      "title": "Update Permission Group",
      "version": "1.0.0",
      "name": "Update_Permission_Group",
      "description": "<p>Update Permission Group</p>",
      "group": "PermissionGroup_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Required id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Required Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "pagePermissions",
              "description": "<p>Required Page Permissions Array.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Permission Group',\n     recordList: PermissionGroup,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/permissionGroupRoutes.ts",
      "groupTitle": "PermissionGroup_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/updatePersonalLoanAmount",
      "title": "Update Loan Amount",
      "version": "1.0.0",
      "name": "Update_Loan_Amount",
      "description": "<p>Update Loan Amount</p>",
      "group": "Personal_Loan_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires Loan Amount.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Loan Amount Updated',\n     recordList: Customer Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loan_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/acceptLoanOffer",
      "title": "Accept Loan Offer",
      "version": "1.0.0",
      "name": "Accept_Loan_Offer",
      "description": "<p>Accept Loan Offer</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires id of OFfer.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Accept Loan Offer',\n     recordList: Loan Offer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/changeEmploymentType",
      "title": "Change EmploymentType",
      "version": "1.0.0",
      "name": "Change_EmploymentType",
      "description": "<p>Change EmploymentType</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change EmploymentType',\n     recordList: CustomeLoans,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/getCustomerPersonalById",
      "title": "Get Customer Personal Detail Loan By Id",
      "version": "1.0.0",
      "name": "Get_Customer_Personal_Detail_Loan_By_Id",
      "description": "<p>Get Customer Personal Detail Loan By Id</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Customer Personal Detail Loan By Id',\n     recordList: Personal Loan Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/getGeneratedOffer",
      "title": "Get Generated Offer",
      "version": "1.0.0",
      "name": "Get_Generated_Offer",
      "description": "<p>Get Generated Offer</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Generated Offer',\n     recordList: Offer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/checkEligibility",
      "title": "Get Generated Offer",
      "version": "1.0.0",
      "name": "Get_Generated_Offer",
      "description": "<p>Get Generated Offer</p>",
      "group": "Personal_Loan_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Generated Offer',\n     recordList: Offer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/getIncompletePersonalLoanDetail",
      "title": "Get Incomplete Personal Loan Detail",
      "version": "1.0.0",
      "name": "Get_Incomplete_Personal_Loan_Detail",
      "description": "<p>Get Incomplete Personal Loan Detail</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires ServiceId Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Incomplete Personal Loan Detail',\n     recordList: Update Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/getLoanDetail",
      "title": "Get Loan Detail",
      "version": "1.0.0",
      "name": "Get_Loan_Detail",
      "description": "<p>Get Loan Detail</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Loan Detail',\n     recordList: Loan Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/getLoanRejectionReason",
      "title": "Get Loan Rejection Reason",
      "version": "1.0.0",
      "name": "Get_Loan_Rejection_Reason",
      "description": "<p>Get Loan Rejection Reason</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Loan Rejection Reason',\n     recordList: Loan Rejection Reason,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/insertUpdateEmploymentDetail",
      "title": "Insert/Update Employment Detail",
      "version": "1.0.0",
      "name": "Insert/Update_Employment_Detail",
      "description": "<p>Insert/Update Employment Detail</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires Employment Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "monthlyIncome",
              "description": "<p>Requires Monthly Income.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "companyName",
              "description": "<p>Requires Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "officePincode",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanId",
              "description": "<p>Optional CustomerLoan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanEmploymentId",
              "description": "<p>Optional customerLoanEmployment Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Employment Detail',\n     recordList: Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/newToTransfer",
      "title": "Transfer Loan",
      "version": "1.0.0",
      "name": "Transfer_Loan",
      "description": "<p>Transfer Loan</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Transfer Loan',\n     recordList: CustomeLoans,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/updatePersonalLoanAmount",
      "title": "Update Loan Amount",
      "version": "1.0.0",
      "name": "Update_Loan_Amount",
      "description": "<p>Update Loan Amount</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "loanAmount",
              "description": "<p>Requires Loan Amount.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Loan Amount Updated',\n     recordList: Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/insertUpdateMoreBasicDetail",
      "title": "Update Personal Loan Basic Detail",
      "version": "1.0.0",
      "name": "Update_Personal_Loan_Basic_Detail",
      "description": "<p>Update Personal Loan Basic Detail</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "alternativeContactNo",
              "description": "<p>Requires Customer Alternate Contact No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "gender",
              "description": "<p>Requires Customer Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "maritalStatusId",
              "description": "<p>Requires Customer Marital Status.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "motherName",
              "description": "<p>Requires Customer Mother Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fatherContactNo",
              "description": "<p>Requires Customer Father Contact No.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanSpouseId",
              "description": "<p>Optional Customer Loan Spouse Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "spouseName",
              "description": "<p>Optional Customer Father Contact No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "spouseContactNo",
              "description": "<p>Optional Customer Father Contact No.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Personal Loan Basic Detail',\n     recordList: Update Personal Loan Basic Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/updateMoreEmploymentDetail",
      "title": "Update Personal Loan Employment Detail",
      "version": "1.0.0",
      "name": "Update_Personal_Loan_Employment_Detail",
      "description": "<p>Update Personal Loan Employment Detail</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanEmploymentId",
              "description": "<p>Requires Customer Loan Employmentdetail Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "emailId",
              "description": "<p>Requires Customer Email Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "companyTypeId",
              "description": "<p>Requires Company TypeId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "label",
              "description": "<p>Requires Company Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine1",
              "description": "<p>Requires Company AddressLine 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine2",
              "description": "<p>Requires Company AddressLine 2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires Company Address Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires Company Address CityId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "city",
              "description": "<p>Requires Company Address City.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "district",
              "description": "<p>Requires Company Address District.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "state",
              "description": "<p>Requires Company Address State.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "designation",
              "description": "<p>Requires Designation.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "currentCompanyExperience",
              "description": "<p>Requires Current company Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "companyAddressId",
              "description": "<p>Optional Company Address Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Personal Loan Employment Detail',\n     recordList: Update Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/uploadPersonalLoanDocumentAndReference",
      "title": "Upload Loan Document and Reference",
      "version": "1.0.0",
      "name": "Upload_Loan_Document_and_Reference",
      "description": "<p>Upload Loan Document and Reference</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "loanDocuments",
              "description": "<p>Requires Uploaded Documents Array {documentData,isPdf,documentName,loanDocumentId(Required Id Update),documentId,serviceTypeDocumentId}.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "loanReferences",
              "description": "<p>Requires References Array {loanReferenceId(isUpdated),name,contactNo}.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Upload Loan Document and Reference',\n     recordList: Personal Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/personalLoans/uploadPersonalLoanDocumentAndReference",
      "title": "Upload Loan Document and Reference",
      "version": "1.0.0",
      "name": "Upload_Loan_Document_and_Reference",
      "description": "<p>Upload Loan Document and Reference</p>",
      "group": "Personal_Loan_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "loanDocuments",
              "description": "<p>Requires Uploaded Documents Array {documentData,isPdf,documentName,loanDocumentId(Required Id Update),documentId,serviceTypeDocumentId}.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "loanReferences",
              "description": "<p>Requires References Array {loanReferenceId(isUpdated),name,contactNo}.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Upload Loan Document and Reference',\n     recordList: Personal Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/partner/personalLoans/updateMoreEmploymentDetail",
      "title": "Update Personal Loan Employment Detail",
      "version": "1.0.0",
      "name": "Update_Personal_Loan_Employment_Detail",
      "description": "<p>Update Personal Loan Employment Detail</p>",
      "group": "Personal_Loan_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanEmploymentId",
              "description": "<p>Requires Customer Loan Employmentdetail Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Requires Customer Loan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "emailId",
              "description": "<p>Requires Customer Email Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "companyTypeId",
              "description": "<p>Requires Company TypeId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "label",
              "description": "<p>Requires Company Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine1",
              "description": "<p>Requires Company AddressLine 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine2",
              "description": "<p>Requires Company AddressLine 2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires Company Address Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires Company Address CityId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "city",
              "description": "<p>Requires Company Address City.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "district",
              "description": "<p>Requires Company Address District.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "state",
              "description": "<p>Requires Company Address State.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "designation",
              "description": "<p>Requires Designation.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "currentCompanyExperience",
              "description": "<p>Requires Current company Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "companyAddressId",
              "description": "<p>Optional Company Address Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Personal Loan Employment Detail',\n     recordList: Update Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/personalLoans/getIncompletePersonalLoanDetail",
      "title": "Get Incomplete Personal Loan Detail",
      "version": "1.0.0",
      "name": "Get_Incomplete_Personal_Loan_Detail",
      "description": "<p>Get Incomplete Personal Loan Detail</p>",
      "group": "Personal_Loan_-_partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires ServiceId Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Incomplete Personal Loan Detail',\n     recordList: Update Personal Loan Employment Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/personalLoanRoutes.ts",
      "groupTitle": "Personal_Loan_-_partner"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/acceptLoanOffer",
      "title": "Accept CustomerLoan Offer",
      "version": "1.0.0",
      "name": "Accept_CustomerLoan_Offer",
      "description": "<p>Accept CustomerLoan Offer</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankOfferId",
              "description": "<p>Required Id of bankOffer</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "isAccept",
              "description": "<p>Required status of offer</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Accept CustomerLoan Offer ',\n     recordList: Accept CustomerLoan Offer ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/disbursedApplication",
      "title": "Accept CustomerLoan Offer",
      "version": "1.0.0",
      "name": "Accept_CustomerLoan_Offer",
      "description": "<p>Accept CustomerLoan Offer</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankOfferId",
              "description": "<p>Required Id of bankOffer</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "isAccept",
              "description": "<p>Required status of offer</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required id of customerLoan</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Required id of service</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankId",
              "description": "<p>Required id of bank</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Accept CustomerLoan Offer ',\n     recordList: Accept CustomerLoan Offer ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/changeDocumentStatus",
      "title": "Change Document Status",
      "version": "1.0.0",
      "name": "Change_Document_Status",
      "description": "<p>Change Document Status</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Required Id of customerLoanDocument</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "status",
              "description": "<p>Required status for customerLoanDocument</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Document Status ',\n     recordList: CustomerLoan Document ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/deleteLoanById",
      "title": "Delete Customer Loan",
      "version": "1.0.0",
      "name": "Delete_Customer_Loan",
      "description": "<p>Delete Customer Loan</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required Id of customerLoan</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Delete Customer Loan',\n     recordList: Delete Customer Loan ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/getOffer",
      "title": "Get CustomerLoan Offer",
      "version": "1.0.0",
      "name": "Get_CustomerLoan_Offer",
      "description": "<p>Get CustomerLoan Offer</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Required Id of services</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Required id of employmentType</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get CustomerLoan Offer ',\n     recordList: Get CustomerLoan Offer ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/getLoanOffer",
      "title": "Get CustomerLoan  Offer",
      "version": "1.0.0",
      "name": "Get_CustomerLoan_Offer",
      "description": "<p>Get CustomerLoan Offer</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required Id of customerLoan</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get CustomerLoan Offer ',\n     recordList: Get CustomerLoan Offer ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/getPersonalLoanById",
      "title": "Get Personal Loan By Id",
      "version": "1.0.0",
      "name": "Get_Personal_Loan_By_Id",
      "description": "<p>Get Personal Loan By Id</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required customerLoan Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Personal Loan By Id',\n     recordList: Personal Loans ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/assignToRM",
      "title": "Get Personal Loan By Id",
      "version": "1.0.0",
      "name": "Get_Personal_Loan_By_Id",
      "description": "<p>Get Personal Loan By Id</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required customerLoan Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Required RM User Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Personal Loan By Id',\n     recordList: Personal Loans ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/getPersonalLoan",
      "title": "Get Personal Loans",
      "version": "1.0.0",
      "name": "Get_Personal_Loans",
      "description": "<p>Get Personal Loans</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Required Service Id</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Personal Loans ',\n     recordList: Personal Loans ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/insertUpdatePersonalLoanBasicDetail",
      "title": "InsertUpdate CustomerLoan Basic Detail",
      "version": "1.0.0",
      "name": "InsertUpdate_CustomerLoan_Basic_Detail",
      "description": "<p>InsertUpdate CustomerLoan Basic Detail</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "alternativeContactNo",
              "description": "<p>Requires Customer Alternate Contact No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "gender",
              "description": "<p>Requires Customer Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "maritalStatusId",
              "description": "<p>Requires Customer Marital Status.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "motherName",
              "description": "<p>Requires Customer Mother Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fatherContactNo",
              "description": "<p>Requires Customer Father Contact No.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanSpouseId",
              "description": "<p>Optional Customer Loan Spouse Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "spouseName",
              "description": "<p>Optional Customer Loan Spouse Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "spouseContactNo",
              "description": "<p>Optional Customer Loan Spouse ContactNo.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'InsertUpdate CustomerLoan BasicDetail',\n     recordList: InsertUpdate CustomerLoan BasicDetail ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/insertUpdatePersonalLoanEmploymentDetail",
      "title": "InsertUpdate CustomerLoan Employment Detail",
      "version": "1.0.0",
      "name": "InsertUpdate_CustomerLoan_Employment_Detail",
      "description": "<p>InsertUpdate CustomerLoan Employment Detail</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires Employment Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "monthlyIncome",
              "description": "<p>Requires Monthly Income.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "companyName",
              "description": "<p>Requires Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "officePincode",
              "description": "<p>Requires Office Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "customerLoanId",
              "description": "<p>Optional CustomerLoan Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanEmploymentId",
              "description": "<p>Requires Customer Loan Employmentdetail Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "emailId",
              "description": "<p>Requires Customer Email Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "companyTypeId",
              "description": "<p>Requires Company TypeId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "label",
              "description": "<p>Requires Company Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine1",
              "description": "<p>Requires Company AddressLine 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "addressLine2",
              "description": "<p>Requires Company AddressLine 2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires Company Address Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires Company Address CityId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "city",
              "description": "<p>Requires Company Address City.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "district",
              "description": "<p>Requires Company Address District.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "state",
              "description": "<p>Requires Company Address State.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "designation",
              "description": "<p>Requires Designation.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "currentCompanyExperience",
              "description": "<p>Requires Current company Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "companyAddressId",
              "description": "<p>Optional Company Address Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'InsertUpdate CustomerLoan Employment Detail',\n     recordList: InsertUpdate CustomerLoan Employment Detail ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/insertUpdateLoanRejectionReason",
      "title": "InsertUpdate CustomerLoan RejectionReason",
      "version": "1.0.0",
      "name": "InsertUpdate_CustomerLoan_RejectionReason",
      "description": "<p>InsertUpdate CustomerLoan RejectionReason</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required Id of customerLoan</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "reason",
              "description": "<p>Required reason for customerLoan Rejection</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'InsertUpdate CustomerLoan RejectionReason ',\n     recordList: InsertUpdate CustomerLoan RejectionReason ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/insertSelectedOffer",
      "title": "Insert CustomerLoan Selected Offer",
      "version": "1.0.0",
      "name": "Insert_CustomerLoan_Offer",
      "description": "<p>Insert CustomerLoan Offer</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required Id of customerLoan</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert CustomerLoan Offer ',\n     recordList: Insert CustomerLoan Offer ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/insertOffer",
      "title": "Insert CustomerLoan  Offer",
      "version": "1.0.0",
      "name": "Insert_CustomerLoan_Offer",
      "description": "<p>Insert CustomerLoan Offer</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required Id of customerLoan</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert CustomerLoan Offer ',\n     recordList: Insert CustomerLoan Offer ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/insertLoanDetail",
      "title": "Insert Loan detail",
      "version": "1.0.0",
      "name": "Insert_Loan_detail",
      "description": "<p>Insert Loan detail</p>",
      "group": "Personal_Loans_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "bankId",
              "description": "<p>Required Id of bank</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "amountDisbursed",
              "description": "<p>Required amountDisbursed</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerLoanId",
              "description": "<p>Required id of customerLoan</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "ROI",
              "description": "<p>Required ROI</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "tenure",
              "description": "<p>Required tenure</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Accept CustomerLoan Offer ',\n     recordList: Accept CustomerLoan Offer ,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Personal_Loans_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/products/activeInactiveProducts",
      "title": "Active/Inactive Products",
      "version": "1.0.0",
      "name": "Active/Inactive_Products",
      "description": "<p>Active/Inactive Products</p>",
      "group": "Products_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Product Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Active/Inactive Products',\n     recordList: Products,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/productsRoutes.ts",
      "groupTitle": "Products_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/products/getProducts",
      "title": "Get Products",
      "version": "1.0.0",
      "name": "Get_Products",
      "description": "<p>Get Products</p>",
      "group": "Products_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "searchString",
              "description": "<p>Optional Product Search String.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "minCoin",
              "description": "<p>Optional min Coin.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "maxCoin",
              "description": "<p>Optional max Coin.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Products',\n     recordList: Products,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/productsRoutes.ts",
      "groupTitle": "Products_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/products/inserUpdateProducts",
      "title": "Insert/Update Products",
      "version": "1.0.0",
      "name": "Insert/Update_Products",
      "description": "<p>Insert/Update Products</p>",
      "group": "Products_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "id",
              "description": "<p>Optional Product Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Product Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "description",
              "description": "<p>Requires Product Description.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "imageUrl",
              "description": "<p>Requires Image Base64/ Url.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "coin",
              "description": "<p>Requires Product Coin.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert/Update Products',\n     recordList: Products,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/productsRoutes.ts",
      "groupTitle": "Products_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/products/getProducts",
      "title": "get Products",
      "version": "1.0.0",
      "name": "get_Products",
      "description": "<p>get Products</p>",
      "group": "Products_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "searchString",
              "description": "<p>Optional Product Search String.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "minCoin",
              "description": "<p>Optional min Coin.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "maxCoin",
              "description": "<p>Optional max Coin.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'get Products',\n     recordList: Products,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/productsRoutes.ts",
      "groupTitle": "Products_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/web/professionTypes/getProfessionTypes",
      "title": "Get Profession Types",
      "version": "1.0.0",
      "name": "Get_Profession_Types",
      "description": "<p>Get Profession Types</p>",
      "group": "Profession_Types_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Profession Types',\n     recordList: Profession Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/professionTypeRoutes.ts",
      "groupTitle": "Profession_Types_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/partner/professions/getProfessions",
      "title": "Get Professions",
      "version": "1.0.0",
      "name": "Get_Professions",
      "description": "<p>Get Professions</p>",
      "group": "Professions_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Professions',\n     recordList: Professions,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/professionsRoutes.ts",
      "groupTitle": "Professions_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/admin/propertyType/activeInactivePropertType",
      "title": "Change Property Type Status",
      "version": "1.0.0",
      "name": "Change_Property_Type_Status",
      "description": "<p>Change Property Type Status</p>",
      "group": "Property_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Property Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Property Type Status',\n     recordList: Property Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/propertyTypeRoutes.ts",
      "groupTitle": "Property_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/propertyType/getPropertyType",
      "title": "Get Property Type",
      "version": "1.0.0",
      "name": "Get_Property_Type",
      "description": "<p>Get Property Type</p>",
      "group": "Property_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Property Type',\n     recordList: Property Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/propertyTypeRoutes.ts",
      "groupTitle": "Property_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/propertyType/updatePropertyType",
      "title": "update Property Type",
      "version": "1.0.0",
      "name": "Update_Property_Type",
      "description": "<p>Update Property Type</p>",
      "group": "Property_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Property Type.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Property Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Property Type',\n     recordList: Property Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/propertyTypeRoutes.ts",
      "groupTitle": "Property_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/propertyType/insertPropertyType",
      "title": "insert Property Type",
      "version": "1.0.0",
      "name": "insert_Property_Type",
      "description": "<p>insert Property Type</p>",
      "group": "Property_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Property Type</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Property Type',\n     recordList: Property Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/propertyTypeRoutes.ts",
      "groupTitle": "Property_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/referLink/insertReferLink",
      "title": "Insert Refer Link",
      "version": "1.0.0",
      "name": "Insert_Refer_Link",
      "description": "<p>Insert Refer Link</p>",
      "group": "Refer_Link_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires Role Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Refer Link',\n     recordList: Refer Link Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/referlinkRoutes.ts",
      "groupTitle": "Refer_Link_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/web/referLink/insertReferCustomer",
      "title": "Insert Refer Customer",
      "version": "1.0.0",
      "name": "Insert_Refer_Customer",
      "description": "<p>Insert Refer Customer</p>",
      "group": "Refer_Link_-_Website",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires contactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "panCardNo",
              "description": "<p>Requires PAN Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires PinCode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires CityId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "city",
              "description": "<p>Requires City Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "district",
              "description": "<p>Requires District Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "state",
              "description": "<p>Requires State NAme.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "referenceUserId",
              "description": "<p>Requires Reference UserId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "referLinkId",
              "description": "<p>Requires Refer Link Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "countryCode",
              "description": "<p>Optional Country Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressTypeId",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional AddressLine 1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional AddressLine 2.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Refer Customer',\n     recordList: Insert Refer Customer,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/referlinkRoutes.ts",
      "groupTitle": "Refer_Link_-_Website"
    },
    {
      "type": "post",
      "url": "/api/web/referLink/validateReferLink",
      "title": "Validate Refer Link",
      "version": "1.0.0",
      "name": "Validate_Refer_Link",
      "description": "<p>Validate Refer Link</p>",
      "group": "Refer_Link_-_Website",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "linkKey",
              "description": "<p>Requires Refer.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Validate Refer Link',\n     recordList: Refer Link Detail,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/referlinkRoutes.ts",
      "groupTitle": "Refer_Link_-_Website"
    },
    {
      "type": "post",
      "url": "/api/admin/residentTypes/activeInactiveResidentType",
      "title": "Change Resident Type Status",
      "version": "1.0.0",
      "name": "Change_Resident_Typel_Status",
      "description": "<p>Change Resident Type Status</p>",
      "group": "Resident_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Resident Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Resident Type',\n     recordList: Resident Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/residenceTypeRoutes.ts",
      "groupTitle": "Resident_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/residentTypes/getResidentTypes",
      "title": "Get Resident Type",
      "version": "1.0.0",
      "name": "Get_Resident_Type",
      "description": "<p>Get Resident Type</p>",
      "group": "Resident_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Resident Type',\n     recordList: Resident Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/residenceTypeRoutes.ts",
      "groupTitle": "Resident_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/residentTypes/insertResidentType",
      "title": "insert Resident Type",
      "version": "1.0.0",
      "name": "insert/Update_Resident_Type",
      "description": "<p>insert Resident Type</p>",
      "group": "Resident_Type_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name of Resident Type.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Resident Type',\n     recordList: Resident Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/residenceTypeRoutes.ts",
      "groupTitle": "Resident_Type_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/rewardCoin/getRewardCoin",
      "title": "Get Reward Coin",
      "version": "1.0.0",
      "name": "Get_Reward_Coin",
      "description": "<p>Get Reward Coin</p>",
      "group": "Reward_Coin_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Reward Coin',\n     recordList: Reward Coin,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/rewardCoinRoutes.ts",
      "groupTitle": "Reward_Coin_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/rewardCoin/getRewardType",
      "title": "Get Reward Coin",
      "version": "1.0.0",
      "name": "Get_Reward_Type",
      "description": "<p>Get Reward Type</p>",
      "group": "Reward_Coin_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Reward Type',\n     recordList: Reward Type,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/rewardCoinRoutes.ts",
      "groupTitle": "Reward_Coin_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/rewardCoin/insertUpdateRewardCoin",
      "title": "insert Reward Coin",
      "version": "1.0.0",
      "name": "insert/Update_Reward_Coin",
      "description": "<p>insert Reward Coin</p>",
      "group": "Reward_Coin_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "rewardTypeId",
              "description": "<p>Requires Reward Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Reward Coin.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Reward Coin',\n     recordList: Reward Coin,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/rewardCoinRoutes.ts",
      "groupTitle": "Reward_Coin_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/roles/deleteRole",
      "title": "Delete Roles",
      "version": "1.0.0",
      "name": "Delete_Roles",
      "description": "<p>Delete Roles</p>",
      "group": "Roles_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Role is Deleted',\n     recordList: Roles,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/rolesRoute.ts",
      "groupTitle": "Roles_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/roles/getAllRoles",
      "title": "Get All Roles",
      "version": "1.0.0",
      "name": "Get_All_Roles",
      "description": "<p>Get All Roles</p>",
      "group": "Roles_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get All Roles',\n     recordList: Roles,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/rolesRoute.ts",
      "groupTitle": "Roles_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/roles/getRolesForAdminPanel",
      "title": "Get Roles For Admin Panel",
      "version": "1.0.0",
      "name": "Get_Roles_For_Admin_Panel",
      "description": "<p>Get Roles For Admin Panel</p>",
      "group": "Roles_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Role is Deleted',\n     recordList: Roles,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/rolesRoute.ts",
      "groupTitle": "Roles_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/roles/insertRoles",
      "title": "Insert Roles",
      "version": "1.0.0",
      "name": "Insert_Roles",
      "description": "<p>Insert Roles</p>",
      "group": "Roles_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Role is created',\n     recordList: Roles,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/rolesRoute.ts",
      "groupTitle": "Roles_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/roles/updateRoles",
      "title": "Update Roles",
      "version": "1.0.0",
      "name": "Update_Roles",
      "description": "<p>Update Roles</p>",
      "group": "Roles_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires name.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Role is Updated',\n     recordList: Roles,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/rolesRoute.ts",
      "groupTitle": "Roles_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/partner/roles/getPartnerRoles",
      "title": "Get Partner Roles",
      "version": "1.0.0",
      "name": "Get_Partner_Roles",
      "description": "<p>Get Partner Roles</p>",
      "group": "Roles_-_Partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Partner Roles',\n     recordList: Roles,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/rolesRoutes.ts",
      "groupTitle": "Roles_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/web/roles/getAllRoles",
      "title": "Get All Roles",
      "version": "1.0.0",
      "name": "Get_All_Roles",
      "description": "<p>Get All Roles</p>",
      "group": "Roles_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get All Roles',\n     recordList: Roles,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/roleRoutes.ts",
      "groupTitle": "Roles_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/web/roles/getPartnerRoles",
      "title": "Get All Roles",
      "version": "1.0.0",
      "name": "Get_All_Roles",
      "description": "<p>Get All Roles</p>",
      "group": "Roles_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get All Roles',\n     recordList: Roles,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/roleRoutes.ts",
      "groupTitle": "Roles_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/sample/ping",
      "title": "Get Ping",
      "version": "1.0.0",
      "name": "Get_Ping",
      "description": "<p>Get Ping</p>",
      "group": "Sample",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Ping',\n     recordList: Get Ping,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/sample.ts",
      "groupTitle": "Sample"
    },
    {
      "type": "post",
      "url": "/api/customer/scratchCards/getScratchCard",
      "title": "Get Users Scratch Cards",
      "version": "1.0.0",
      "name": "Get_Users_Scratch_Cards",
      "description": "<p>Get Users Scratch Cards</p>",
      "group": "Scratch_Cards_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Users Scratch Cards',\n     recordList: Get Users Scratch Cards,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/scratchCardRoutes.ts",
      "groupTitle": "Scratch_Cards_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/scratchCards/updateScratchCardStatus",
      "title": "Update Scratch Card Status",
      "version": "1.0.0",
      "name": "Update_Scratch_Card_Status",
      "description": "<p>Update Scratch Card Status</p>",
      "group": "Scratch_Cards_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userScratchCardId",
              "description": "<p>Requires Users Scratch Card Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "value",
              "description": "<p>Requires Coin Value.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Scratch Card Status',\n     recordList: Update Scratch Card Status,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/scratchCardRoutes.ts",
      "groupTitle": "Scratch_Cards_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/scratchCards/getScratchCard",
      "title": "Get Users Scratch Cards",
      "version": "1.0.0",
      "name": "Get_Users_Scratch_Cards",
      "description": "<p>Get Users Scratch Cards</p>",
      "group": "Scratch_Cards_-_admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "rewardTypeId",
              "description": "<p>Optional rewardTypeId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "roleId",
              "description": "<p>Optional roleId.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "searchString",
              "description": "<p>Optional SearchString.</p>"
            },
            {
              "group": "Parameter",
              "type": "Date",
              "optional": true,
              "field": "fromDate",
              "description": "<p>Optional fromDate.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "toDate",
              "description": "<p>Optional toDate.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Users Scratch Cards',\n     recordList: Get Users Scratch Cards,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/usersscratchcarRoutes.ts",
      "groupTitle": "Scratch_Cards_-_admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceEmploymentType/insertServiceEmploymentType",
      "title": "insert Service Employment Types",
      "version": "1.0.0",
      "name": "insert_Employment_Types",
      "description": "<p>insert Service Employment Types</p>",
      "group": "Servcie_Employment_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "number",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires is of service.</p>"
            },
            {
              "group": "Parameter",
              "type": "number",
              "optional": false,
              "field": "employmentTypeIds",
              "description": "<p>Required id of employmentTypes.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Service Employment Types',\n     recordList:Service Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceEmploymentTypeRoutes.ts",
      "groupTitle": "Servcie_Employment_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/services/activeInactiveServices",
      "title": "Change Service Status",
      "version": "1.0.0",
      "name": "Change_Service_Status",
      "description": "<p>Change Service Status</p>",
      "group": "Service_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": false,
              "field": "isActive",
              "description": "<p>Requires Status.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Service Status',\n     recordList: Service,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/servicesRoutes.ts",
      "groupTitle": "Service_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/services/updateServices",
      "title": "Update Service",
      "version": "1.0.0",
      "name": "Update_Service",
      "description": "<p>Update Service</p>",
      "group": "Service_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceTypeId",
              "description": "<p>Requires Service Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Service Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "displayName",
              "description": "<p>Requires Service Display Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "description",
              "description": "<p>Optional Service Description.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "iconUrl",
              "description": "<p>Requires Service Icon Url.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Service',\n     recordList: Service,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/servicesRoutes.ts",
      "groupTitle": "Service_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/services/getServices",
      "title": "Get Services",
      "version": "1.0.0",
      "name": "Get_Services",
      "description": "<p>Get Services</p>",
      "group": "Service_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Services',\n     recordList: Service,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/servicesRoutes.ts",
      "groupTitle": "Service_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/services/getServicesByServiceTypeId",
      "title": "Get Services By Service TypeId",
      "version": "1.0.0",
      "name": "Get_Services_By_Service_TypeId",
      "description": "<p>Get Services By Service TypeId</p>",
      "group": "Service_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceTypeId",
              "description": "<p>Requires Service Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Services',\n     recordList: Service,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/servicesRoutes.ts",
      "groupTitle": "Service_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceDocuments/activeInactiveServiceDocuments",
      "title": "Change Service Documents Status",
      "version": "1.0.0",
      "name": "Change_Service_Documents_Status",
      "description": "<p>Change Service Documents Status</p>",
      "group": "Service_Documents_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Service Document Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": false,
              "field": "isActive",
              "description": "<p>Requires Status.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Service Documents Status',\n     recordList: Service Documents,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceDocumentRoutes.ts",
      "groupTitle": "Service_Documents_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceDocuments/getServiceDocuments",
      "title": "Get Service Documents",
      "version": "1.0.0",
      "name": "Get_Service_Documents",
      "description": "<p>Get Service Documents</p>",
      "group": "Service_Documents_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Service Documents',\n     recordList: Service Documents,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceDocumentRoutes.ts",
      "groupTitle": "Service_Documents_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceDocuments/updateServiceDocuments",
      "title": "Update Service Documents",
      "version": "1.0.0",
      "name": "Update_Service_Documents",
      "description": "<p>Update Service Documents</p>",
      "group": "Service_Documents_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Service Document Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integet",
              "optional": false,
              "field": "documentId",
              "description": "<p>Requires Document Master Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "documentName",
              "description": "<p>Requires Document Master Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "displayName",
              "description": "<p>Requires Service Document Display Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "documentCount",
              "description": "<p>Requires No of particulat type of document necessory for this service.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": false,
              "field": "isRequired",
              "description": "<p>Requires this document is required or not.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Service Documents',\n     recordList: Service Documents,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceDocumentRoutes.ts",
      "groupTitle": "Service_Documents_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceDocuments/insertServiceDocuments",
      "title": "insert Service Documents",
      "version": "1.0.0",
      "name": "insert_Service_Documents",
      "description": "<p>insert Service Documents</p>",
      "group": "Service_Documents_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integet",
              "optional": false,
              "field": "documentId",
              "description": "<p>Requires Document Master Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "documentName",
              "description": "<p>Requires Document Master Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "displayName",
              "description": "<p>Requires Service Document Display Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "documentCount",
              "description": "<p>Requires No of particulat type of document necessory for this service.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": false,
              "field": "isRequired",
              "description": "<p>Requires this document is required or not.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Service Documents',\n     recordList: Service Documents,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceDocumentRoutes.ts",
      "groupTitle": "Service_Documents_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/serviceDocuments/getDocumentByServiceId",
      "title": "Get Documents By ServiceId",
      "version": "1.0.0",
      "name": "Get_Documents_By_ServiceId",
      "description": "<p>Get Documents By ServiceId</p>",
      "group": "Service_Documents_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Documents By ServiceId',\n     recordList: Service Documents,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/serviceDocumentsRoutes.ts",
      "groupTitle": "Service_Documents_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceEmploymentTypes/activeInactiveServiceEmploymentType",
      "title": "Change Service Employment Types Status",
      "version": "1.0.0",
      "name": "Change_Service_Employment_Types_Status",
      "description": "<p>Change Service Employment Types Status</p>",
      "group": "Service_Employment_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Service Employment Type Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Service Employment Types Status',\n     recordList: Service Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceEmploymentTypeRoutes.ts",
      "groupTitle": "Service_Employment_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceEmploymentType/getServiceEmploymentTypes",
      "title": "Get Service Employment Types",
      "version": "1.0.0",
      "name": "Get_Service_Employment_Types",
      "description": "<p>Get Service Employment Types</p>",
      "group": "Service_Employment_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Service Employment Types',\n     recordList: Service Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceEmploymentTypeRoutes.ts",
      "groupTitle": "Service_Employment_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceTypes/updateServiceEmploymentType",
      "title": "update Service Employment Types",
      "version": "1.0.0",
      "name": "update_Service_Employment_Types",
      "description": "<p>update Service Employment Types</p>",
      "group": "Service_Employment_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "number",
              "optional": false,
              "field": "id",
              "description": "<p>Requires id of Employment Type .</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires id of serviceId.</p>"
            },
            {
              "group": "Parameter",
              "type": "number",
              "optional": false,
              "field": "employmentTypeIds",
              "description": "<p>Required id of Employment Types.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Service Employment Types',\n     recordList: Service Employment Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceEmploymentTypeRoutes.ts",
      "groupTitle": "Service_Employment_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceTypes/activeInactiveServiceTypes",
      "title": "Change Service Types Status",
      "version": "1.0.0",
      "name": "Change_Service_Types_Status",
      "description": "<p>Change Service Types Status</p>",
      "group": "Service_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Service Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": false,
              "field": "isActive",
              "description": "<p>Requires Status.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Service Types Status',\n     recordList: Service Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceTypesRoutes.ts",
      "groupTitle": "Service_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceTypes/getServiceTypes",
      "title": "Get Service Types",
      "version": "1.0.0",
      "name": "Get_Service_Types",
      "description": "<p>Get Service Types</p>",
      "group": "Service_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Service Types',\n     recordList: Service Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceTypesRoutes.ts",
      "groupTitle": "Service_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceTypes/insertServiceTypes",
      "title": "insert Service Types",
      "version": "1.0.0",
      "name": "insert_Service_Types",
      "description": "<p>insert Service Types</p>",
      "group": "Service_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Service Type Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "displayName",
              "description": "<p>Requires Service Type Display Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "description",
              "description": "<p>Optional Service Type Description.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "iconUrl",
              "description": "<p>Requires Service Type Icon Url.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "colorCode",
              "description": "<p>Requires Service Type Color Code.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Service Types',\n     recordList: Service Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceTypesRoutes.ts",
      "groupTitle": "Service_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/serviceTypes/updateServiceTypes",
      "title": "update Service Types",
      "version": "1.0.0",
      "name": "update_Service_Types",
      "description": "<p>update Service Types</p>",
      "group": "Service_Types_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "number",
              "optional": false,
              "field": "id",
              "description": "<p>Requires id of Service Type .</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Service Type Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "displayName",
              "description": "<p>Requires Service Type Display Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "description",
              "description": "<p>Optional Service Type Description.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "iconUrl",
              "description": "<p>Requires Service Type Icon Url.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "colorCode",
              "description": "<p>Requires Service Type Color Code.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Service Types',\n     recordList: Service Types,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/serviceTypesRoutes.ts",
      "groupTitle": "Service_Types_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/services/getServices",
      "title": "Get Services",
      "version": "1.0.0",
      "name": "Get_Services",
      "description": "<p>Get Services</p>",
      "group": "Services_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Services',\n     recordList: Service,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/servicesRoutes.ts",
      "groupTitle": "Services_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/services/insertServices",
      "title": "insert Service",
      "version": "1.0.0",
      "name": "insert_Service",
      "description": "<p>insert Service</p>",
      "group": "Services_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Service Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "serviceTypeId",
              "description": "<p>Requires Service Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "displayName",
              "description": "<p>Requires Service Display Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "description",
              "description": "<p>Optional Service Description.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "iconUrl",
              "description": "<p>Requires Service Icon Url.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "colorCode",
              "description": "<p>Requires Service Color Code.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Service',\n     recordList: Service,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/servicesRoutes.ts",
      "groupTitle": "Services_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/web/services/getServices",
      "title": "Get Services",
      "version": "1.0.0",
      "name": "Get_Services",
      "description": "<p>Get Services</p>",
      "group": "Services_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Services',\n     recordList: Services,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/serviceRoutes.ts",
      "groupTitle": "Services_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/admin/systemflags/getAdminSystemFlag",
      "title": "Get System Flag",
      "version": "1.0.0",
      "name": "Get_System_Flag",
      "description": "<p>Get  System Flag</p>",
      "group": "System_Flag_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get  System Flag',\n     recordList:  System Flag,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/systemFlagRoutes.ts",
      "groupTitle": "System_Flag_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/systemflags/updateSystemFlagByName",
      "title": "Update System Flag List",
      "version": "1.0.0",
      "name": "Update_System_Flag_List",
      "description": "<p>Update System Flag List</p>",
      "group": "System_Flag_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "valueList",
              "description": "<p>Requires Array List of value.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "nameList",
              "description": "<p>Requires Array List of System Flag Name.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update System Flag List',\n     recordList: System Flag,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/systemFlagRoutes.ts",
      "groupTitle": "System_Flag_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/personalLoans/getTenure",
      "title": "Get Tenure",
      "name": "Get_Tenure",
      "description": "<p>Get Tenure</p>",
      "group": "Tenure_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Tenure',\n     recordList: Tenure,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "version": "0.0.0",
      "filename": "source/routes/admin/personalloansRoutes.ts",
      "groupTitle": "Tenure_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/web/towns/getTowns",
      "title": "Get Towns",
      "version": "1.0.0",
      "name": "Get_Towns",
      "description": "<p>Get Towns</p>",
      "group": "Town_-_WebSite",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Towns',\n     recordList: Town,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/townRoutes.ts",
      "groupTitle": "Town_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/admin/training/activeInactiveTraining",
      "title": "Change Training Status",
      "version": "1.0.0",
      "name": "Change_Training_Status",
      "description": "<p>Change Training Status</p>",
      "group": "Training_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Training Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Training Status',\n     recordList: Training,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingRoutes.ts",
      "groupTitle": "Training_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/training/getTraining",
      "title": "Get Training",
      "version": "1.0.0",
      "name": "Get_Training",
      "description": "<p>Get Training</p>",
      "group": "Training_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Training',\n     recordList: Training,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingRoutes.ts",
      "groupTitle": "Training_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/training/removeTraining",
      "title": "Remove Training",
      "version": "1.0.0",
      "name": "Remove_Training",
      "description": "<p>Remove Training</p>",
      "group": "Training_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Training Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Remove Training ',\n     recordList: Training,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingRoutes.ts",
      "groupTitle": "Training_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/training/getAssignTrainingUsers",
      "title": "get Training Assign Users",
      "version": "1.0.0",
      "name": "get_Training_Assign_Users",
      "description": "<p>get Training Assign Users</p>",
      "group": "Training_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "trainingId",
              "description": "<p>Requires Training Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'get Training Assign Users',\n     recordList: Training AssingUsers,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingRoutes.ts",
      "groupTitle": "Training_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/training/insertTraining",
      "title": "insert Training",
      "version": "1.0.0",
      "name": "insert_Training",
      "description": "<p>insert Training</p>",
      "group": "Training_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "title",
              "description": "<p>Requires Training Title.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "assignRoleId",
              "description": "<p>Optional AssignRoleId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "url",
              "description": "<p>Requires Training url.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fileName",
              "description": "<p>Requires Training fileName.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "trainingCategoryId",
              "description": "<p>Requires Training CategoryId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Training',\n     recordList: Training,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingRoutes.ts",
      "groupTitle": "Training_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/training/insertAssignTrainingUsers",
      "title": "insert Training Assign Users",
      "version": "1.0.0",
      "name": "insert_Training_Assign_Users",
      "description": "<p>insert Training Assign Users</p>",
      "group": "Training_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "trainingId",
              "description": "<p>Requires Training Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "assignUserIds",
              "description": "<p>Requires AssignUser Ids.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Training Assign Users',\n     recordList: Training,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingRoutes.ts",
      "groupTitle": "Training_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/training/updateTraining",
      "title": "update Training",
      "version": "1.0.0",
      "name": "update_Training",
      "description": "<p>update Training</p>",
      "group": "Training_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Training Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "title",
              "description": "<p>Requires Training Title.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "assignRoleId",
              "description": "<p>Optional AssignRoleId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "url",
              "description": "<p>Requires Training url.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fileName",
              "description": "<p>Requires Training fileName.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "trainingCategoryId",
              "description": "<p>Requires Training CategoryId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Training',\n     recordList: Training,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingRoutes.ts",
      "groupTitle": "Training_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/partner/trainings/completePartnerTraining",
      "title": "Complete Partner Training",
      "version": "1.0.0",
      "name": "Complete_Partner_Training",
      "description": "<p>Complete Partner Training</p>",
      "group": "Training_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "assignUserTrainingId",
              "description": "<p>Requires Assign User Training Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Complete Partner Training',\n     recordList: Training,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/trainingRoutes.ts",
      "groupTitle": "Training_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/trainings/getAssignTrainingsByPartnerId",
      "title": "Get Assign Training of Partner",
      "version": "1.0.0",
      "name": "Get_Assign_Training_of_Partner",
      "description": "<p>Get Assign Training of Partner</p>",
      "group": "Training_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Requires Partner Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Assign Training of Partner',\n     recordList: Training,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/trainingRoutes.ts",
      "groupTitle": "Training_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/admin/trainingCategory/activeInactiveTrainingCategory",
      "title": "Change Training Category Status",
      "version": "1.0.0",
      "name": "Change_Training_Category_Status",
      "description": "<p>Change Training Category Status</p>",
      "group": "Training_Category_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Training Category Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change TrainingCategory Status',\n     recordList: Training Category,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingCategoryRoutes.ts",
      "groupTitle": "Training_Category_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/trainingCategory/getTrainingCategory",
      "title": "Get Training Category",
      "version": "1.0.0",
      "name": "Get_Training_Category",
      "description": "<p>Get Training Category</p>",
      "group": "Training_Category_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Training Categories',\n     recordList: Training Categories,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingCategoryRoutes.ts",
      "groupTitle": "Training_Category_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/trainingCategory/removeTrainingCategory",
      "title": "Remove Training Category",
      "version": "1.0.0",
      "name": "Remove_Training_Category",
      "description": "<p>Remove Training Category</p>",
      "group": "Training_Category_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Training Category Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Remove TrainingCategory ',\n     recordList: Training Category,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingCategoryRoutes.ts",
      "groupTitle": "Training_Category_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/trainingCategory/insertTrainingCategory",
      "title": "insert Training Category",
      "version": "1.0.0",
      "name": "insert_Training_Category",
      "description": "<p>insert Training Category</p>",
      "group": "Training_Category_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Training Category Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "parentId",
              "description": "<p>Optional parentId of training category.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'insert Training Category',\n     recordList: Training Categories,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingCategoryRoutes.ts",
      "groupTitle": "Training_Category_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/trainingCategory/updateTrainingCategroy",
      "title": "update Training Category",
      "version": "1.0.0",
      "name": "update_Training_Category",
      "description": "<p>update Training Category</p>",
      "group": "Training_Category_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires Training Category Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "name",
              "description": "<p>Requires Training Category Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "parentId",
              "description": "<p>Optional parentId of training category.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'update Training Category',\n     recordList: Training Categories,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/trainingCategoryRoutes.ts",
      "groupTitle": "Training_Category_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/users/checkContactNoExist",
      "title": "Check Contact No Exist",
      "version": "1.0.0",
      "name": "Check_Contact_No_Exist",
      "description": "<p>Check Contact No Exist</p>",
      "group": "User_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Check Contact No Exist',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/usersRoutes.ts",
      "groupTitle": "User_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/users/checkStatusForBecomeapartner",
      "title": "Check Status for become a partner",
      "version": "1.0.0",
      "name": "Check_Status_for_become_a_partner",
      "description": "<p>Insert Check Status for become a partner</p>",
      "group": "User_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Check Status for become a partner',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/usersRoutes.ts",
      "groupTitle": "User_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/users/clientVerifyContact",
      "title": "client Verify Contact",
      "version": "1.0.0",
      "name": "Customer_Verify_Contact_No",
      "description": "<p>Customer Verify Contact No</p>",
      "group": "User_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "countryCode",
              "description": "<p>Requires Countery Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "email",
              "description": "<p>Requires Email.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Customer Verify Contact No',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/usersRoutes.ts",
      "groupTitle": "User_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/users/insertRequestForBecomePartner",
      "title": "Insert request for become a partner",
      "version": "1.0.0",
      "name": "Insert_request_for_become_a_partner",
      "description": "<p>Insert request for become a partner</p>",
      "group": "User_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Requires User Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Customer Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Date",
              "optional": false,
              "field": "birthdate",
              "description": "<p>Requires Customer Birth Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "panCardNo",
              "description": "<p>Requires Pan Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "aadhaarCardNo",
              "description": "<p>Requires AadharCard No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires Contact No.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert request for become a partner',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/usersRoutes.ts",
      "groupTitle": "User_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/users/updateCustomerDetail",
      "title": "Update Customer Detail",
      "version": "1.0.0",
      "name": "Update_Customer_Detail",
      "description": "<p>Update Customer Detail</p>",
      "group": "User_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Requires User Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "fullName",
              "description": "<p>Optional Customer Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Date",
              "optional": true,
              "field": "birthdate",
              "description": "<p>Optional Customer Birth Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "panCardNo",
              "description": "<p>Optional Pan Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "alternativeContactNo",
              "description": "<p>Optional Alternative Contact No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gender",
              "description": "<p>Optional Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "maritalStatusId",
              "description": "<p>Optional Customer Marital Status Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Customer Detail',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/usersRoutes.ts",
      "groupTitle": "User_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/users/updateCustomerProfile",
      "title": "Update Customer Detail",
      "version": "1.0.0",
      "name": "Update_Customer_Detail",
      "description": "<p>Update Customer Detail</p>",
      "group": "User_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Requires User Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "customerId",
              "description": "<p>Requires Customer Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Customer Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Date",
              "optional": false,
              "field": "birthdate",
              "description": "<p>Requires Customer Birth Date.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "panCardNo",
              "description": "<p>Requires Pan Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "aadhaarCardNo",
              "description": "<p>Requires AadharCard No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires Contact No.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Customer Detail',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/usersRoutes.ts",
      "groupTitle": "User_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/users/validateSessionToken",
      "title": "Validate User By Session Token",
      "version": "1.0.0",
      "name": "Validate_User_By_Session_Token",
      "description": "<p>Validate User By Session Token</p>",
      "group": "User_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Validate User By Session Token',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/usersRoutes.ts",
      "groupTitle": "User_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/partner/users/checkContactNoExist",
      "title": "Check ContactNo Exist",
      "version": "1.0.0",
      "name": "Check_ContactNo_Exist",
      "description": "<p>Check ContactNo Exist</p>",
      "group": "User_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Check ContactNo Exist',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/usersRoutes.ts",
      "groupTitle": "User_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/users/login",
      "title": "Partner Login",
      "version": "1.0.0",
      "name": "Partner_Login",
      "description": "<p>Partner Login</p>",
      "group": "User_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Partner SignUp',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/usersRoutes.ts",
      "groupTitle": "User_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/users/signup",
      "title": "Partner SignUp",
      "version": "1.0.0",
      "name": "Partner_SignUp",
      "description": "<p>Partner SignUp</p>",
      "group": "User_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "roleName",
              "description": "<p>Requires Role Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Full Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "cityId",
              "description": "<p>Requires service City Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "email",
              "description": "<p>Optional Email Of Customer.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "countryCode",
              "description": "<p>Optional Country Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "aadhaarCardNo",
              "description": "<p>Optional Aadhar Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "panCardNo",
              "description": "<p>Optional PAN Card No.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "companyName",
              "description": "<p>Optional Company Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "professionTypeId",
              "description": "<p>Optional Profession Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "workExperience",
              "description": "<p>Optional Work Experience.</p>"
            },
            {
              "group": "Parameter",
              "type": "Boolean",
              "optional": true,
              "field": "haveOffice",
              "description": "<p>Optional haveOffice.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gender",
              "description": "<p>Optional Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessName",
              "description": "<p>Optional Business Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "businessAddress",
              "description": "<p>Optional Business Address.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "gstNo",
              "description": "<p>Optional gstNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "referralCode",
              "description": "<p>Optional Referral Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "commitment",
              "description": "<p>Optional Commitment.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "dsaCode",
              "description": "<p>Optional dsaCode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "addressTypeId",
              "description": "<p>Optional Address Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "label",
              "description": "<p>Optional Address Label.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine1",
              "description": "<p>Optional Address Line1.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "addressLine2",
              "description": "<p>Optional Address Line2.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "pincode",
              "description": "<p>Optional Pincode.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "designationId",
              "description": "<p>Optional Designation Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "educationTypeId",
              "description": "<p>Optional Education Type Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "instituteName",
              "description": "<p>Optional Institute Name.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "passingYear",
              "description": "<p>Optional Passing Year.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "resume",
              "description": "<p>Optional Resume Base 64.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "contentType",
              "description": "<p>Optional File Type.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": true,
              "field": "otherDetail",
              "description": "<p>Optional OtherDetail.</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": true,
              "field": "documents",
              "description": "<p>Optional Array OF DSA Signup Uploaded Documetns with documentId,fileData(base64),fileName,contentType.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Partner SignUp',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/usersRoutes.ts",
      "groupTitle": "User_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/users/validateSessionToken",
      "title": "Validate User By Session Token",
      "version": "1.0.0",
      "name": "Validate_User_By_Session_Token",
      "description": "<p>Validate User By Session Token</p>",
      "group": "User_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires ContactNo.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Validate User By Session Token',\n     recordList: User,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/usersRoutes.ts",
      "groupTitle": "User_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/admin/userPages/getPages",
      "title": "Get Pages",
      "name": "Get_Pages",
      "description": "<p>Get Pages</p>",
      "group": "User_Pages_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Pages',\n     recordList: Pages,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "version": "0.0.0",
      "filename": "source/routes/admin/userPageRoutes.ts",
      "groupTitle": "User_Pages_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/userPages/getUserPages",
      "title": "Get User Pages",
      "name": "Get_User_Pages",
      "description": "<p>Get User Pages</p>",
      "group": "User_Pages_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Required User Id</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get User Pages',\n     recordList: User Pages,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "version": "0.0.0",
      "filename": "source/routes/admin/userPageRoutes.ts",
      "groupTitle": "User_Pages_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/userPages/insertUserPages",
      "title": "Insert User Page Permission",
      "name": "Insert_User_Page_Permission",
      "description": "<p>Insert User Page Permission</p>",
      "group": "User_Pages_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userId",
              "description": "<p>Required User Id</p>"
            },
            {
              "group": "Parameter",
              "type": "Array",
              "optional": false,
              "field": "userPages",
              "description": "<p>Required User Page Permission Array</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert User Page Permission',\n     recordList: User Pages,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "version": "0.0.0",
      "filename": "source/routes/admin/userPageRoutes.ts",
      "groupTitle": "User_Pages_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/userWallets/getUsersWallet",
      "title": "Get User Wallet",
      "version": "1.0.0",
      "name": "Get_User_Wallet",
      "description": "<p>Get User Wallet</p>",
      "group": "User_Wallet_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get User Wallet',\n     recordList: Get User Wallet,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/userWalletRoutes.ts",
      "groupTitle": "User_Wallet_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/userWallets/getUsersWalletHistory",
      "title": "Get User Wallet History",
      "version": "1.0.0",
      "name": "Get_User_Wallet_History",
      "description": "<p>Get User Wallet History</p>",
      "group": "User_Wallet_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "userWalletId",
              "description": "<p>Required User Wallet Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get User Wallet History',\n     recordList: Get User Wallet History,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/userWalletRoutes.ts",
      "groupTitle": "User_Wallet_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/admin/partners/getPartnerUsersByRoleId",
      "title": "Admin Get Partners By RoleId",
      "version": "1.0.0",
      "name": "Admin_Get_Partners_By_RoleId",
      "description": "<p>Admin Get Partners By RoleId</p>",
      "group": "Users_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Required Role Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Fetch Records.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Partners By RoleId',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/partnerRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/partners/getPartnerList",
      "title": "Admin Get Partners List",
      "version": "1.0.0",
      "name": "Admin_Get_Partners_List",
      "description": "<p>Admin Get Partners List</p>",
      "group": "Users_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Required Role Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Partners By RoleId',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/partnerRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/users/getUser",
      "title": "Admin Get User",
      "version": "1.0.0",
      "name": "Admin_Get_User",
      "description": "<p>Admin Get User</p>",
      "group": "Users_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Requires Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get User',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/usersRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/users/getRM",
      "title": "Admin Get User",
      "version": "1.0.0",
      "name": "Admin_Get_User",
      "description": "<p>Admin Get User</p>",
      "group": "Users_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get User',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/usersRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/users/insertUser",
      "title": "Admin Insert User",
      "version": "1.0.0",
      "name": "Admin_Insert_User",
      "description": "<p>Admin Insert User</p>",
      "group": "Users_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Users fullName.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "gender",
              "description": "<p>Requires Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "email",
              "description": "<p>Requires User Email.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "password",
              "description": "<p>Requires Base 64 Password.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "profilePicUrl",
              "description": "<p>Optional Base64 of ProfilePic.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "permissionGroupId",
              "description": "<p>Optional Permission GroupId.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId of User.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert User',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/usersRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/users/login",
      "title": "Admin Login",
      "version": "1.0.0",
      "name": "Admin_Login",
      "description": "<p>Admin Login</p>",
      "group": "Users_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "email",
              "description": "<p>Requires Email Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "password",
              "description": "<p>Requires base 64 password.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Admin Login',\n     recordList: Roles,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/usersRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/users/removeUser",
      "title": "Admin Remove User",
      "version": "1.0.0",
      "name": "Admin_Remove_User",
      "description": "<p>Admin Remove User</p>",
      "group": "Users_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires id of User.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Remove User',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/usersRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/users/updateUser",
      "title": "Admin Update User",
      "version": "1.0.0",
      "name": "Admin_Update_User",
      "description": "<p>Admin Update User</p>",
      "group": "Users_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires Users fullName.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "gender",
              "description": "<p>Requires Gender.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "email",
              "description": "<p>Requires User Email.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "password",
              "description": "<p>Requires Base 64 Password.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": true,
              "field": "profilePicUrl",
              "description": "<p>Optional Base64 of ProfilePic.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId of User.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update User',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/usersRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/users/blockUnBlockUser",
      "title": "Admin blockUnblock User",
      "version": "1.0.0",
      "name": "Admin_blockUnblock_User",
      "description": "<p>Admin blockUnblock User</p>",
      "group": "Users_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "id",
              "description": "<p>Requires id of User.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'blockUnblock User',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/usersRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/partners/deletePartnerByPartnerId",
      "title": "Delete Partner By Partner Id",
      "version": "1.0.0",
      "name": "Delete_Partner_By_Partner_Id",
      "description": "<p>Delete Partner By Partner Id</p>",
      "group": "Users_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "partnerId",
              "description": "<p>Required Partner Id.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Delete Partner By Partner Id',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/partnerRoutes.ts",
      "groupTitle": "Users_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/web/users/verifyContactNo",
      "title": "Verify ContactNo",
      "version": "1.0.0",
      "name": "Verify_ContactNo",
      "description": "<p>Verify ContactNo</p>",
      "group": "Users_-_WebSite",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "countryCode",
              "description": "<p>Requires country Code.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires contactNo.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Verify ContactNo',\n     recordList: Users,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/website/userRoutes.ts",
      "groupTitle": "Users_-_WebSite"
    },
    {
      "type": "post",
      "url": "/api/customer/notifications/getNotifications",
      "title": "Get Users Notification",
      "version": "1.0.0",
      "name": "Get_Users_Notification",
      "description": "<p>Get Users Notification</p>",
      "group": "Users_Notification_-_Customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "startIndex",
              "description": "<p>Optional Start Index.</p>"
            },
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": true,
              "field": "fetchRecords",
              "description": "<p>Optional Fetch Records.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Users Notification',\n     recordList: Users Notification,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/notificationRoutes.ts",
      "groupTitle": "Users_Notification_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/partner/visitingCards/getVisitingCards",
      "title": "Get VisitingCards",
      "version": "1.0.0",
      "name": "Get_VisitingCards",
      "description": "<p>Get VisitingCards</p>",
      "group": "VisitingCards_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get VisitingCards',\n     recordList: VisitingCards,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/visitingCardRoutes.ts",
      "groupTitle": "VisitingCards_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/visitingCards/insertVisitingCard",
      "title": "Get VisitingCards",
      "version": "1.0.0",
      "name": "Get_VisitingCards",
      "description": "<p>Get VisitingCards</p>",
      "group": "VisitingCards_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get VisitingCards',\n     recordList: VisitingCards,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/visitingCardRoutes.ts",
      "groupTitle": "VisitingCards_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/visitingCards/getCompletedVisitingCard",
      "title": "Get VisitingCards",
      "version": "1.0.0",
      "name": "Get_VisitingCards",
      "description": "<p>Get VisitingCards</p>",
      "group": "VisitingCards_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get VisitingCards',\n     recordList: VisitingCards,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/visitingCardRoutes.ts",
      "groupTitle": "VisitingCards_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/partner/visitingCards/updateVisitingCard",
      "title": "Get VisitingCards",
      "version": "1.0.0",
      "name": "Get_VisitingCards",
      "description": "<p>Get VisitingCards</p>",
      "group": "VisitingCards_-_Partner",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "roleId",
              "description": "<p>Requires RoleId.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get VisitingCards',\n     recordList: VisitingCards,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/visitingCardRoutes.ts",
      "groupTitle": "VisitingCards_-_Partner"
    },
    {
      "type": "post",
      "url": "/api/admin/visitingCards/activeInactiveVisitingCard",
      "title": "Visiting Card Status Change",
      "version": "1.0.0",
      "name": "Change_Visiting_Card_Status",
      "description": "<p>Change Visiting Card Status</p>",
      "group": "Visiting_Card_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Change Visiting Card Status',\n     recordList: Visiting Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/visitingCardRoutes.ts",
      "groupTitle": "Visiting_Card_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/visitingCards/getVisitingCards",
      "title": "Get Visiting Card",
      "version": "1.0.0",
      "name": "Get_Visiting_Card",
      "description": "<p>Get Visiting Card</p>",
      "group": "Visiting_Card_-_Admin",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Visiting Card',\n     recordList: Visiting Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/visitingCardRoutes.ts",
      "groupTitle": "Visiting_Card_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/visitingCards/insertVisitingCard",
      "title": "Insert Visiting Card",
      "version": "1.0.0",
      "name": "Insert_Visiting_Card",
      "description": "<p>Insert Visiting Card</p>",
      "group": "Visiting_Card_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "string",
              "optional": false,
              "field": "roleIds",
              "description": "<p>Required roleIds.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": false,
              "field": "template",
              "description": "<p>Required template.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Visiting Card',\n     recordList: Visiting Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/visitingCardRoutes.ts",
      "groupTitle": "Visiting_Card_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/admin/visitingCards/updateVisitingCard",
      "title": "Update Visiting Card",
      "version": "1.0.0",
      "name": "Update_Visiting_Card",
      "description": "<p>Update Visiting Card</p>",
      "group": "Visiting_Card_-_Admin",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "string",
              "optional": false,
              "field": "id",
              "description": "<p>Required id of visitin card.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": false,
              "field": "roleIds",
              "description": "<p>Required roleIds.</p>"
            },
            {
              "group": "Parameter",
              "type": "string",
              "optional": false,
              "field": "template",
              "description": "<p>Required template.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Update Visiting Card',\n     recordList: Visiting Card,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/admin/visitingCardRoutes.ts",
      "groupTitle": "Visiting_Card_-_Admin"
    },
    {
      "type": "post",
      "url": "/api/customer/otherLoans/insertCustomerOtherLoanDetail",
      "title": "Insert other loan Detail",
      "version": "1.0.0",
      "name": "Insert_other_loan_Detail",
      "description": "<p>Insert other loan Detail</p>",
      "group": "customer_-_customer",
      "parameter": {
        "fields": {
          "Parameter": [
            {
              "group": "Parameter",
              "type": "Integer",
              "optional": false,
              "field": "serviceId",
              "description": "<p>Requires Service Id.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "fullName",
              "description": "<p>Requires fullName.</p>"
            },
            {
              "group": "Parameter",
              "type": "DateTime",
              "optional": false,
              "field": "birthdate",
              "description": "<p>Requires Birthdate.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "panCardNo",
              "description": "<p>Requires PanCardNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "aadhaarCardNo",
              "description": "<p>Requires aadhaarCardNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "contactNo",
              "description": "<p>Requires contactNo.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "email",
              "description": "<p>Requires email.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "employmentTypeId",
              "description": "<p>Requires employmentTypeId.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "monthlyincome",
              "description": "<p>Requires monthlyincome.</p>"
            },
            {
              "group": "Parameter",
              "type": "String",
              "optional": false,
              "field": "pincode",
              "description": "<p>Requires pincode.</p>"
            }
          ]
        }
      },
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Insert Other loan Commission',\n     recordList: Other Loan,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/otherLoanRoutes.ts",
      "groupTitle": "customer_-_customer"
    },
    {
      "type": "post",
      "url": "/api/customer/faqs/getFaqs",
      "title": "Get Customer FAQs",
      "version": "1.0.0",
      "name": "Get_Faqs",
      "description": "<p>Get Faqs</p>",
      "group": "faqs_-_Customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Faqs',\n     recordList: getFaqs,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/faqsRoutes.ts",
      "groupTitle": "faqs_-_Customer"
    },
    {
      "type": "post",
      "url": "/api/customer/faqs/getFaqsByCategories",
      "title": "Get customer FAQs",
      "version": "1.0.0",
      "name": "Get_Faqs",
      "description": "<p>Get Faqs</p>",
      "group": "faqs_-_customer",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Faqs',\n     recordList: getFaqs,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/customer/faqsRoutes.ts",
      "groupTitle": "faqs_-_customer"
    },
    {
      "type": "post",
      "url": "/api/partner/faqs/getFaqs",
      "title": "Get partner FAQs",
      "version": "1.0.0",
      "name": "Get_Faqs",
      "description": "<p>Get Faqs</p>",
      "group": "faqs_-_partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Faqs',\n     recordList: getFaqs,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/faqsRoutes.ts",
      "groupTitle": "faqs_-_partner"
    },
    {
      "type": "post",
      "url": "/api/partner/faqs/getFaqsByCategories",
      "title": "Get partner FAQs",
      "version": "1.0.0",
      "name": "Get_Faqs",
      "description": "<p>Get Faqs</p>",
      "group": "faqs_-_partner",
      "success": {
        "fields": {
          "200": [
            {
              "group": "200",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>status, message, recordList, totalRecords.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Success-200-Response:",
            "content": "HTTP/1.1 200 OK\n{\n     status: 200,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: 'Get Faqs',\n     recordList: getFaqs,\n     totalRecords: TotalRecords\n}",
            "type": "json"
          }
        ]
      },
      "error": {
        "fields": {
          "500": [
            {
              "group": "500",
              "type": "JSON",
              "optional": false,
              "field": "Result",
              "description": "<p>message, apiName, apiType, fileName, functionName, lineNumber, typeName, stack.</p>"
            }
          ]
        },
        "examples": [
          {
            "title": "Error-500-Response:",
            "content": "HTTP/1.1 500 ERROR\n{\n     status: <error status code>,\n     isDisplayMessage: <true/false>, // if the value is true then display message on screen\n     message: <error message>,\n     error: {\n         apiName: <api name>,\n         apiType: <api type>,\n         fileName: <file name>,\n         functionName: <function name>,\n         lineNumber: <line number>,\n         typeName: <type name>,\n         stack: <stack>\n     },\n     value: <value if any>\n}",
            "type": "json"
          }
        ]
      },
      "filename": "source/routes/partner/faqsRoutes.ts",
      "groupTitle": "faqs_-_partner"
    }
  ]
});
