"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.userResponse = void 0;
class userResponse {
    constructor(userId, email, countryCode, password, profilePicUrl, isDisabled, roleId, partnerId, parentPartnerId, temporaryCode, permanentCode, fullName, gender, contactNo, aadhaarCardNo, panCardNo, cityId, companyName, companyTypeId, udhyamAadhaarNo, companyRegNo, professionTypeId, workExperience, haveOffice, businessName, businessAddress, gstNo, commitment, designationId, referralCode, isActive, isDelete, createdDate, modifiedDate, createdBy, modifiedBy, currentBadgeId, badgeName, sessionToken, userRole, parentPartner, addressId, label, addressLine1, addressLine2, pincode, city, district, state, districtId, stateId, partnerEducationId, educationTypeId, instituteName, passingYear, resume, businessaddressLine1, businessaddressLine2, businesspincode, workAddressCityId, jobType) {
        this.userId = userId;
        this.email = email;
        this.countryCode = countryCode;
        this.password = password;
        this.profilePicUrl = profilePicUrl;
        this.isDisabled = isDisabled;
        this.roleId = roleId;
        this.partnerId = partnerId;
        this.parentPartnerId = parentPartnerId;
        this.temporaryCode = temporaryCode;
        this.permanentCode = permanentCode;
        this.fullName = fullName;
        this.gender = gender;
        this.contactNo = contactNo;
        this.aadhaarCardNo = aadhaarCardNo;
        this.panCardNo = panCardNo;
        this.cityId = cityId;
        this.companyName = companyName;
        this.companyTypeId = companyTypeId;
        this.udhyamAadhaarNo = udhyamAadhaarNo;
        this.companyRegNo = companyRegNo;
        this.professionTypeId = professionTypeId;
        this.workExperience = workExperience;
        this.haveOffice = haveOffice;
        this.businessName = businessName;
        this.businessAddress = businessAddress;
        this.gstNo = gstNo;
        this.commitment = commitment;
        this.designationId = designationId;
        this.referralCode = referralCode;
        this.isActive = isActive;
        this.isDelete = isDelete;
        this.createdDate = createdDate;
        this.modifiedDate = modifiedDate;
        this.createdBy = createdBy;
        this.modifiedBy = modifiedBy;
        this.currentBadgeId = currentBadgeId;
        this.badgeName = badgeName;
        this.sessionToken = sessionToken;
        this.userRole = userRole;
        this.parentPartner = parentPartner;
        this.addressId = addressId;
        this.label = label;
        this.addressLine1 = addressLine1;
        this.addressLine2 = addressLine2;
        this.pincode = pincode;
        this.city = city;
        this.district = district;
        this.state = state;
        this.districtId = districtId;
        this.stateId = stateId;
        this.partnerEducationId = partnerEducationId;
        this.educationTypeId = educationTypeId;
        this.instituteName = instituteName;
        this.passingYear = passingYear;
        this.resume = resume;
        this.businessaddressLine1 = businessaddressLine1;
        this.businessaddressLine2 = businessaddressLine2;
        this.businesspincode = businesspincode;
        this.workAddressCityId = workAddressCityId;
        this.jobType = jobType;
    }
}
exports.userResponse = userResponse;
